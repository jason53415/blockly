// Do not edit this file; automatically generated by gulp.

/* eslint-disable */
;(function(root, factory) {
  if (typeof define === 'function' && define.amd) { // AMD
    define(['./blockly_compressed.js'], factory);
  } else if (typeof exports === 'object') { // Node.js
    module.exports = factory(require('./blockly_compressed.js'));
  } else { // Browser
    root.Blockly.Python = factory(root.Blockly);
  }
}(this, function(Blockly) {
  /*

 Copyright 2012 Google LLC
 SPDX-License-Identifier: Apache-2.0
*/
'use strict';Blockly.Python=new Blockly.Generator("Python");Blockly.Python.addReservedWords("False,None,True,and,as,assert,break,class,continue,def,del,elif,else,except,exec,finally,for,from,global,if,import,in,is,lambda,nonlocal,not,or,pass,print,raise,return,try,while,with,yield,NotImplemented,Ellipsis,__debug__,quit,exit,copyright,license,credits,ArithmeticError,AssertionError,AttributeError,BaseException,BlockingIOError,BrokenPipeError,BufferError,BytesWarning,ChildProcessError,ConnectionAbortedError,ConnectionError,ConnectionRefusedError,ConnectionResetError,DeprecationWarning,EOFError,Ellipsis,EnvironmentError,Exception,FileExistsError,FileNotFoundError,FloatingPointError,FutureWarning,GeneratorExit,IOError,ImportError,ImportWarning,IndentationError,IndexError,InterruptedError,IsADirectoryError,KeyError,KeyboardInterrupt,LookupError,MemoryError,ModuleNotFoundError,NameError,NotADirectoryError,NotImplemented,NotImplementedError,OSError,OverflowError,PendingDeprecationWarning,PermissionError,ProcessLookupError,RecursionError,ReferenceError,ResourceWarning,RuntimeError,RuntimeWarning,StandardError,StopAsyncIteration,StopIteration,SyntaxError,SyntaxWarning,SystemError,SystemExit,TabError,TimeoutError,TypeError,UnboundLocalError,UnicodeDecodeError,UnicodeEncodeError,UnicodeError,UnicodeTranslateError,UnicodeWarning,UserWarning,ValueError,Warning,ZeroDivisionError,_,__build_class__,__debug__,__doc__,__import__,__loader__,__name__,__package__,__spec__,abs,all,any,apply,ascii,basestring,bin,bool,buffer,bytearray,bytes,callable,chr,classmethod,cmp,coerce,compile,complex,copyright,credits,delattr,dict,dir,divmod,enumerate,eval,exec,execfile,exit,file,filter,float,format,frozenset,getattr,globals,hasattr,hash,help,hex,id,input,int,intern,isinstance,issubclass,iter,len,license,list,locals,long,map,max,memoryview,min,next,object,oct,open,ord,pow,print,property,quit,range,raw_input,reduce,reload,repr,reversed,round,set,setattr,slice,sorted,staticmethod,str,sum,super,tuple,type,unichr,unicode,vars,xrange,zip");
Blockly.Python.ORDER_ATOMIC=0;Blockly.Python.ORDER_COLLECTION=1;Blockly.Python.ORDER_STRING_CONVERSION=1;Blockly.Python.ORDER_MEMBER=2.1;Blockly.Python.ORDER_FUNCTION_CALL=2.2;Blockly.Python.ORDER_EXPONENTIATION=3;Blockly.Python.ORDER_UNARY_SIGN=4;Blockly.Python.ORDER_BITWISE_NOT=4;Blockly.Python.ORDER_MULTIPLICATIVE=5;Blockly.Python.ORDER_ADDITIVE=6;Blockly.Python.ORDER_BITWISE_SHIFT=7;Blockly.Python.ORDER_BITWISE_AND=8;Blockly.Python.ORDER_BITWISE_XOR=9;Blockly.Python.ORDER_BITWISE_OR=10;
Blockly.Python.ORDER_RELATIONAL=11;Blockly.Python.ORDER_LOGICAL_NOT=12;Blockly.Python.ORDER_LOGICAL_AND=13;Blockly.Python.ORDER_LOGICAL_OR=14;Blockly.Python.ORDER_CONDITIONAL=15;Blockly.Python.ORDER_LAMBDA=16;Blockly.Python.ORDER_NONE=99;
Blockly.Python.ORDER_OVERRIDES=[[Blockly.Python.ORDER_FUNCTION_CALL,Blockly.Python.ORDER_MEMBER],[Blockly.Python.ORDER_FUNCTION_CALL,Blockly.Python.ORDER_FUNCTION_CALL],[Blockly.Python.ORDER_MEMBER,Blockly.Python.ORDER_MEMBER],[Blockly.Python.ORDER_MEMBER,Blockly.Python.ORDER_FUNCTION_CALL],[Blockly.Python.ORDER_LOGICAL_NOT,Blockly.Python.ORDER_LOGICAL_NOT],[Blockly.Python.ORDER_LOGICAL_AND,Blockly.Python.ORDER_LOGICAL_AND],[Blockly.Python.ORDER_LOGICAL_OR,Blockly.Python.ORDER_LOGICAL_OR]];
Blockly.Python.isInitialized=!1;
Blockly.Python.init=function(a){Object.getPrototypeOf(this).init.call(this);this.PASS=this.INDENT+"pass\n";this.nameDB_?this.nameDB_.reset():this.nameDB_=new Blockly.Names(this.RESERVED_WORDS_);this.nameDB_.setVariableMap(a.getVariableMap());this.nameDB_.populateVariables(a);this.nameDB_.populateProcedures(a);for(var b=[],c=Blockly.Variables.allDeveloperVariables(a),d=0;d<c.length;d++)b.push(this.nameDB_.getName(c[d],Blockly.Names.DEVELOPER_VARIABLE_TYPE)+" = None");a=Blockly.Variables.allUsedVarModels(a);
for(d=0;d<a.length;d++)b.push(this.nameDB_.getName(a[d].getId(),Blockly.VARIABLE_CATEGORY_NAME)+" = None");this.definitions_.variables=b.join("\n");this.isInitialized=!0};
Blockly.Python.finish=function(a){var b=[],c=[],d;for(d in this.definitions_){var e=this.definitions_[d];e.match(/^(from\s+\S+\s+)?import\s+\S+/)?b.push(e):c.push(e)}a=Object.getPrototypeOf(this).finish.call(this,a);this.isInitialized=!1;this.nameDB_.reset();return(b.join("\n")+"\n\n"+c.join("\n\n")).replace(/\n\n+/g,"\n\n").replace(/\n*$/,"\n\n\n")+a};Blockly.Python.scrubNakedValue=function(a){return a+"\n"};
Blockly.Python.quote_=function(a){a=a.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n");var b="'";-1!==a.indexOf("'")&&(-1===a.indexOf('"')?b='"':a=a.replace(/'/g,"\\'"));return b+a+b};Blockly.Python.multiline_quote_=function(a){return a.split(/\n/g).map(this.quote_).join(" + '\\n' + \n")};
Blockly.Python.scrub_=function(a,b,c){var d="";if(!a.outputConnection||!a.outputConnection.targetConnection){var e=a.getCommentText();e&&(e=Blockly.utils.string.wrap(e,this.COMMENT_WRAP-3),d+=this.prefixLines(e+"\n","# "));for(var f=0;f<a.inputList.length;f++)a.inputList[f].type==Blockly.inputTypes.VALUE&&(e=a.inputList[f].connection.targetBlock())&&(e=this.allNestedComments(e))&&(d+=this.prefixLines(e,"# "))}a=a.nextConnection&&a.nextConnection.targetBlock();c=c?"":this.blockToCode(a);return d+b+
c};Blockly.Python.getAdjustedInt=function(a,b,c,d){c=c||0;a.workspace.options.oneBasedIndex&&c--;var e=a.workspace.options.oneBasedIndex?"1":"0";a=this.valueToCode(a,b,c?this.ORDER_ADDITIVE:this.ORDER_NONE)||e;Blockly.isNumber(a)?(a=parseInt(a,10)+c,d&&(a=-a)):(a=0<c?"int("+a+" + "+c+")":0>c?"int("+a+" - "+-c+")":"int("+a+")",d&&(a="-"+a));return a};Blockly.Python.colour={};Blockly.Python.colour_picker=function(a){return[Blockly.Python.quote_(a.getFieldValue("COLOUR")),Blockly.Python.ORDER_ATOMIC]};Blockly.Python.colour_random=function(a){Blockly.Python.definitions_.import_random="import random";return["'#%06x' % random.randint(0, 2**24 - 1)",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.colour_rgb=function(a){var b=Blockly.Python.provideFunction_("colour_rgb",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(r, g, b):","  r = round(min(100, max(0, r)) * 2.55)","  g = round(min(100, max(0, g)) * 2.55)","  b = round(min(100, max(0, b)) * 2.55)","  return '#%02x%02x%02x' % (r, g, b)"]),c=Blockly.Python.valueToCode(a,"RED",Blockly.Python.ORDER_NONE)||0,d=Blockly.Python.valueToCode(a,"GREEN",Blockly.Python.ORDER_NONE)||0;a=Blockly.Python.valueToCode(a,"BLUE",Blockly.Python.ORDER_NONE)||
0;return[b+"("+c+", "+d+", "+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.colour_blend=function(a){var b=Blockly.Python.provideFunction_("colour_blend",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(colour1, colour2, ratio):","  r1, r2 = int(colour1[1:3], 16), int(colour2[1:3], 16)","  g1, g2 = int(colour1[3:5], 16), int(colour2[3:5], 16)","  b1, b2 = int(colour1[5:7], 16), int(colour2[5:7], 16)","  ratio = min(1, max(0, ratio))","  r = round(r1 * (1 - ratio) + r2 * ratio)","  g = round(g1 * (1 - ratio) + g2 * ratio)","  b = round(b1 * (1 - ratio) + b2 * ratio)",
"  return '#%02x%02x%02x' % (r, g, b)"]),c=Blockly.Python.valueToCode(a,"COLOUR1",Blockly.Python.ORDER_NONE)||"'#000000'",d=Blockly.Python.valueToCode(a,"COLOUR2",Blockly.Python.ORDER_NONE)||"'#000000'";a=Blockly.Python.valueToCode(a,"RATIO",Blockly.Python.ORDER_NONE)||0;return[b+"("+c+", "+d+", "+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};/*

 Copyright 2021 PAIA
 SPDX-License-Identifier: Apache-2.0
*/
Blockly.Python.Dicts={};Blockly.Python.dicts_get_keys=function(a){return[(Blockly.Python.valueToCode(a,"DICT",Blockly.Python.ORDER_NONE)||"{}")+".keys()",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.dicts_create_with=function(a){if(0==a.itemCount_)return["{}",Blockly.Python.ORDER_ATOMIC];for(var b=Array(a.itemCount_),c=0;c<a.itemCount_;c++){var d=Blockly.Python.valueToCode(a,"KEY"+c,Blockly.Python.ORDER_NONE)||"None",e=Blockly.Python.valueToCode(a,"VALUE"+c,Blockly.Python.ORDER_NONE)||"None";b[c]=d+": "+e}b="{\n"+Blockly.Python.INDENT+b.join(",\n"+Blockly.Python.INDENT)+"\n}";return[b,Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.dicts_get_value=function(a){var b=Blockly.Python.valueToCode(a,"DICT",Blockly.Python.ORDER_MEMBER)||"{}";a=Blockly.Python.valueToCode(a,"KEY",Blockly.Python.ORDER_NONE)||"None";return[b+"["+a+"]",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.dicts_set_value=function(a){var b=Blockly.Python.valueToCode(a,"DICT",Blockly.Python.ORDER_MEMBER)||"{}",c=Blockly.Python.valueToCode(a,"KEY",Blockly.Python.ORDER_NONE)||"None";a=Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"None";return b+"["+c+"] = "+a+"\n"};Blockly.Python.File={};Blockly.Python.file_save=function(a){Blockly.Python.definitions_.import_pickle="import pickle";Blockly.Python.definitions_.import_os="import os";var b=Blockly.Python.valueToCode(a,"OBJECT",Blockly.Python.ORDER_NONE)||"None";return"with open(os.path.join(os.path.dirname(__file__), "+(Blockly.Python.valueToCode(a,"FILENAME",Blockly.Python.ORDER_NONE)||"'save_"+(new Date).getTime()+"'")+" + '.pickle'), 'wb') as f:\n"+Blockly.Python.prefixLines("pickle.dump("+b+", f)\n",Blockly.Python.INDENT)};
Blockly.Python.file_load=function(a){Blockly.Python.definitions_.import_pickle="import pickle";Blockly.Python.definitions_.import_os="import os";var b=Blockly.Python.valueToCode(a,"OBJECT",Blockly.Python.ORDER_NONE)||"_";return"with open(os.path.join(os.path.dirname(__file__), "+(Blockly.Python.valueToCode(a,"FILENAME",Blockly.Python.ORDER_NONE)||"''")+" + '.pickle'), 'rb') as f:\n"+Blockly.Python.prefixLines(b+" = pickle.load(f)\n",Blockly.Python.INDENT)};
Blockly.Python.file_csv_save=function(a){Blockly.Python.definitions_.import_csv="import csv";Blockly.Python.definitions_.import_os="import os";var b=Blockly.Python.valueToCode(a,"OBJECT",Blockly.Python.ORDER_NONE)||"None",c=Blockly.Python.valueToCode(a,"FILENAME",Blockly.Python.ORDER_NONE)||"'save_"+(new Date).getTime()+"'";a=a.getFieldValue("DELIMITER");return"with open(os.path.join(os.path.dirname(__file__), "+c+" + '.csv'), 'w', newline='') as f:\n"+Blockly.Python.prefixLines("csv.writer(f, delimiter='"+
a+"').writerows("+b+")\n",Blockly.Python.INDENT)};
Blockly.Python.file_csv_load=function(a){Blockly.Python.definitions_.import_csv="import csv";Blockly.Python.definitions_.import_os="import os";var b=Blockly.Python.valueToCode(a,"OBJECT",Blockly.Python.ORDER_NONE)||"_",c=Blockly.Python.valueToCode(a,"FILENAME",Blockly.Python.ORDER_NONE)||"''";a=a.getFieldValue("DELIMITER");return"with open(os.path.join(os.path.dirname(__file__), "+c+" + '.csv'), 'r', newline='') as f:\n"+Blockly.Python.prefixLines(b+" = [row for row in csv.reader(f, delimiter='"+
a+"')]\n",Blockly.Python.INDENT)};Blockly.Python.lists={};Blockly.Python.lists_create_empty=function(a){return["[]",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.lists_create_with=function(a){for(var b=Array(a.itemCount_),c=0;c<a.itemCount_;c++)b[c]=Blockly.Python.valueToCode(a,"ADD"+c,Blockly.Python.ORDER_NONE)||"None";return["["+b.join(", ")+"]",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.lists_repeat=function(a){var b=Blockly.Python.valueToCode(a,"ITEM",Blockly.Python.ORDER_NONE)||"None";a=Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_MULTIPLICATIVE)||"0";return["["+b+"] * "+a,Blockly.Python.ORDER_MULTIPLICATIVE]};Blockly.Python.lists_length=function(a){return["len("+(Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"[]")+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.lists_isEmpty=function(a){return["not len("+(Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"[]")+")",Blockly.Python.ORDER_LOGICAL_NOT]};Blockly.Python.lists_extend=function(a){var b=Blockly.Python.nameDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME);a=Blockly.Python.valueToCode(a,"LIST",Blockly.Python.ORDER_NONE)||"[]";return b+".extend("+a+")\n"};
Blockly.Python.lists_indexOf=function(a){var b=Blockly.Python.valueToCode(a,"FIND",Blockly.Python.ORDER_NONE)||"[]",c=Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"''";if(a.workspace.options.oneBasedIndex)var d=" 0",e=" + 1",f="";else d=" -1",e="",f=" - 1";if("FIRST"==a.getFieldValue("END"))return a=Blockly.Python.provideFunction_("first_index",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(my_list, elem):","  try: index = my_list.index(elem)"+e,"  except: index ="+d,"  return index"]),
[a+"("+c+", "+b+")",Blockly.Python.ORDER_FUNCTION_CALL];a=Blockly.Python.provideFunction_("last_index",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(my_list, elem):","  try: index = len(my_list) - my_list[::-1].index(elem)"+f,"  except: index ="+d,"  return index"]);return[a+"("+c+", "+b+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.lists_getIndex=function(a){var b=a.getFieldValue("MODE")||"GET",c=a.getFieldValue("WHERE")||"FROM_START",d=Blockly.Python.valueToCode(a,"VALUE","RANDOM"==c?Blockly.Python.ORDER_NONE:Blockly.Python.ORDER_MEMBER)||"[]";switch(c){case "FIRST":if("GET"==b)return[d+"[0]",Blockly.Python.ORDER_MEMBER];if("GET_REMOVE"==b)return[d+".pop(0)",Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"==b)return d+".pop(0)\n";break;case "LAST":if("GET"==b)return[d+"[-1]",Blockly.Python.ORDER_MEMBER];if("GET_REMOVE"==
b)return[d+".pop()",Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"==b)return d+".pop()\n";break;case "FROM_START":a=Blockly.Python.getAdjustedInt(a,"AT");if("GET"==b)return[d+"["+a+"]",Blockly.Python.ORDER_MEMBER];if("GET_REMOVE"==b)return[d+".pop("+a+")",Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"==b)return d+".pop("+a+")\n";break;case "FROM_END":a=Blockly.Python.getAdjustedInt(a,"AT",1,!0);if("GET"==b)return[d+"["+a+"]",Blockly.Python.ORDER_MEMBER];if("GET_REMOVE"==b)return[d+".pop("+a+")",
Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"==b)return d+".pop("+a+")\n";break;case "RANDOM":Blockly.Python.definitions_.import_random="import random";if("GET"==b)return["random.choice("+d+")",Blockly.Python.ORDER_FUNCTION_CALL];d=Blockly.Python.provideFunction_("lists_remove_random_item",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  x = int(random.random() * len(myList))","  return myList.pop(x)"])+"("+d+")";if("GET_REMOVE"==b)return[d,Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"==
b)return d+"\n"}throw Error("Unhandled combination (lists_getIndex).");};
Blockly.Python.lists_setIndex=function(a){var b=Blockly.Python.valueToCode(a,"LIST",Blockly.Python.ORDER_MEMBER)||"[]",c=a.getFieldValue("WHERE")||"FROM_START",d=Blockly.Python.valueToCode(a,"TO",Blockly.Python.ORDER_NONE)||"None";switch(c){case "FIRST":return b+"[0] = "+d+"\n";case "LAST":return b+"[-1] = "+d+"\n";case "FROM_START":return a=Blockly.Python.getAdjustedInt(a,"AT"),b+"["+a+"] = "+d+"\n";case "FROM_END":return a=Blockly.Python.getAdjustedInt(a,"AT",1,!0),b+"["+a+"] = "+d+"\n";case "RANDOM":return Blockly.Python.definitions_.import_random=
"import random",b.match(/^\w+$/)?a="":(a=Blockly.Python.nameDB_.getDistinctName("tmp_list",Blockly.VARIABLE_CATEGORY_NAME),c=a+" = "+b+"\n",b=a,a=c),c=Blockly.Python.nameDB_.getDistinctName("tmp_x",Blockly.VARIABLE_CATEGORY_NAME),a+(c+" = int(random.random() * len("+b+"))\n")+(b+"["+c+"] = "+d+"\n")}throw Error("Unhandled combination (lists_setIndex).");};
Blockly.Python.lists_insertIndex=function(a){var b=Blockly.Python.valueToCode(a,"LIST",Blockly.Python.ORDER_MEMBER)||"[]",c=a.getFieldValue("WHERE")||"FROM_START",d=Blockly.Python.valueToCode(a,"TO",Blockly.Python.ORDER_NONE)||"None";switch(c){case "FIRST":return b+".insert(0, "+d+")\n";case "LAST":return b+".append("+d+")\n";case "FROM_START":return a=Blockly.Python.getAdjustedInt(a,"AT"),b+".insert("+a+", "+d+")\n";case "FROM_END":return a=Blockly.Python.getAdjustedInt(a,"AT",1,!0),b+".insert("+
a+", "+d+")\n";case "RANDOM":return Blockly.Python.definitions_.import_random="import random",b.match(/^\w+$/)?a="":(a=Blockly.Python.nameDB_.getDistinctName("tmp_list",Blockly.VARIABLE_CATEGORY_NAME),c=a+" = "+b+"\n",b=a,a=c),c=Blockly.Python.nameDB_.getDistinctName("tmp_x",Blockly.VARIABLE_CATEGORY_NAME),a+(c+" = int(random.random() * len("+b+"))\n")+(b+".insert("+c+", "+d+")\n")}throw Error("Unhandled combination (lists_setIndex).");};
Blockly.Python.lists_getSublist=function(a){var b=Blockly.Python.valueToCode(a,"LIST",Blockly.Python.ORDER_MEMBER)||"[]",c=a.getFieldValue("WHERE1"),d=a.getFieldValue("WHERE2");switch(c){case "FROM_START":c=Blockly.Python.getAdjustedInt(a,"AT1");"0"==c&&(c="");break;case "FROM_END":c=Blockly.Python.getAdjustedInt(a,"AT1",1,!0);break;case "FIRST":c="";break;default:throw Error("Unhandled option (lists_getSublist)");}switch(d){case "FROM_START":a=Blockly.Python.getAdjustedInt(a,"AT2",1);break;case "FROM_END":a=
Blockly.Python.getAdjustedInt(a,"AT2",0,!0);Blockly.isNumber(String(a))?"0"==a&&(a=""):(Blockly.Python.definitions_.import_sys="import sys",a+=" or sys.maxsize");break;case "LAST":a="";break;default:throw Error("Unhandled option (lists_getSublist)");}return[b+"["+c+" : "+a+"]",Blockly.Python.ORDER_MEMBER]};
Blockly.Python.lists_sort=function(a){var b=Blockly.Python.valueToCode(a,"LIST",Blockly.Python.ORDER_NONE)||"[]",c=a.getFieldValue("TYPE");a="1"===a.getFieldValue("DIRECTION")?"False":"True";return[Blockly.Python.provideFunction_("lists_sort",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(my_list, type, reverse):","  def try_float(s):","    try:","      return float(s)","    except:","      return 0","  key_funcs = {",'    "NUMERIC": try_float,','    "TEXT": str,','    "IGNORE_CASE": lambda s: str(s).lower()',
"  }","  key_func = key_funcs[type]","  list_cpy = list(my_list)","  return sorted(list_cpy, key=key_func, reverse=reverse)"])+"("+b+', "'+c+'", '+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.lists_split=function(a){var b=a.getFieldValue("MODE");if("SPLIT"==b)b=Blockly.Python.valueToCode(a,"INPUT",Blockly.Python.ORDER_MEMBER)||"''",a=Blockly.Python.valueToCode(a,"DELIM",Blockly.Python.ORDER_NONE),a=b+".split("+a+")";else if("JOIN"==b)b=Blockly.Python.valueToCode(a,"INPUT",Blockly.Python.ORDER_NONE)||"[]",a=Blockly.Python.valueToCode(a,"DELIM",Blockly.Python.ORDER_MEMBER)||"''",a=a+".join("+b+")";else throw Error("Unknown mode: "+b);return[a,Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.lists_reverse=function(a){return["list(reversed("+(Blockly.Python.valueToCode(a,"LIST",Blockly.Python.ORDER_NONE)||"[]")+"))",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.logic={};
Blockly.Python.controls_if=function(a){var b=0,c="";Blockly.Python.STATEMENT_PREFIX&&(c+=Blockly.Python.injectId(Blockly.Python.STATEMENT_PREFIX,a));do{var d=Blockly.Python.valueToCode(a,"IF"+b,Blockly.Python.ORDER_NONE)||"False";var e=Blockly.Python.statementToCode(a,"DO"+b)||Blockly.Python.PASS;Blockly.Python.STATEMENT_SUFFIX&&(e=Blockly.Python.prefixLines(Blockly.Python.injectId(Blockly.Python.STATEMENT_SUFFIX,a),Blockly.Python.INDENT)+e);c+=(0==b?"if ":"elif ")+d+":\n"+e;++b}while(a.getInput("IF"+
b));if(a.getInput("ELSE")||Blockly.Python.STATEMENT_SUFFIX)e=Blockly.Python.statementToCode(a,"ELSE")||Blockly.Python.PASS,Blockly.Python.STATEMENT_SUFFIX&&(e=Blockly.Python.prefixLines(Blockly.Python.injectId(Blockly.Python.STATEMENT_SUFFIX,a),Blockly.Python.INDENT)+e),c+="else:\n"+e;return c};Blockly.Python.controls_ifelse=Blockly.Python.controls_if;
Blockly.Python.logic_compare=function(a){var b={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="}[a.getFieldValue("OP")],c=Blockly.Python.ORDER_RELATIONAL,d=Blockly.Python.valueToCode(a,"A",c)||"0";a=Blockly.Python.valueToCode(a,"B",c)||"0";return[d+" "+b+" "+a,c]};
Blockly.Python.logic_operation=function(a){var b="AND"==a.getFieldValue("OP")?"and":"or",c="and"==b?Blockly.Python.ORDER_LOGICAL_AND:Blockly.Python.ORDER_LOGICAL_OR,d=Blockly.Python.valueToCode(a,"A",c);a=Blockly.Python.valueToCode(a,"B",c);if(d||a){var e="and"==b?"True":"False";d||(d=e);a||(a=e)}else a=d="False";return[d+" "+b+" "+a,c]};Blockly.Python.logic_negate=function(a){return["not "+(Blockly.Python.valueToCode(a,"BOOL",Blockly.Python.ORDER_LOGICAL_NOT)||"True"),Blockly.Python.ORDER_LOGICAL_NOT]};
Blockly.Python.logic_boolean=function(a){return["TRUE"==a.getFieldValue("BOOL")?"True":"False",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.logic_null=function(a){return["None",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.logic_ternary=function(a){var b=Blockly.Python.valueToCode(a,"IF",Blockly.Python.ORDER_CONDITIONAL)||"False",c=Blockly.Python.valueToCode(a,"THEN",Blockly.Python.ORDER_CONDITIONAL)||"None";a=Blockly.Python.valueToCode(a,"ELSE",Blockly.Python.ORDER_CONDITIONAL)||"None";return[c+" if "+b+" else "+a,Blockly.Python.ORDER_CONDITIONAL]};Blockly.Python.loops={};Blockly.Python.controls_repeat_ext=function(a){var b=a.getField("TIMES")?String(parseInt(a.getFieldValue("TIMES"),10)):Blockly.Python.valueToCode(a,"TIMES",Blockly.Python.ORDER_NONE)||"0";b=Blockly.isNumber(b)?parseInt(b,10):"int("+b+")";var c=Blockly.Python.statementToCode(a,"DO");c=Blockly.Python.addLoopTrap(c,a)||Blockly.Python.PASS;return"for "+Blockly.Python.nameDB_.getDistinctName("count",Blockly.VARIABLE_CATEGORY_NAME)+" in range("+b+"):\n"+c};
Blockly.Python.controls_repeat=Blockly.Python.controls_repeat_ext;Blockly.Python.controls_whileUntil=function(a){var b="UNTIL"==a.getFieldValue("MODE"),c=Blockly.Python.valueToCode(a,"BOOL",b?Blockly.Python.ORDER_LOGICAL_NOT:Blockly.Python.ORDER_NONE)||"False",d=Blockly.Python.statementToCode(a,"DO");d=Blockly.Python.addLoopTrap(d,a)||Blockly.Python.PASS;b&&(c="not "+c);return"while "+c+":\n"+d};
Blockly.Python.controls_for=function(a){var b=Blockly.Python.nameDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME),c=Blockly.Python.valueToCode(a,"FROM",Blockly.Python.ORDER_NONE)||"0",d=Blockly.Python.valueToCode(a,"TO",Blockly.Python.ORDER_NONE)||"0",e=Blockly.Python.valueToCode(a,"BY",Blockly.Python.ORDER_NONE)||"1",f=Blockly.Python.statementToCode(a,"DO");f=Blockly.Python.addLoopTrap(f,a)||Blockly.Python.PASS;var m="",h=function(){return Blockly.Python.provideFunction_("upRange",
["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(start, stop, step):","  while start <= stop:","    yield start","    start += abs(step)"])},k=function(){return Blockly.Python.provideFunction_("downRange",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(start, stop, step):","  while start >= stop:","    yield start","    start -= abs(step)"])};a=function(g,l,p){return"("+g+" <= "+l+") and "+h()+"("+g+", "+l+", "+p+") or "+k()+"("+g+", "+l+", "+p+")"};if(Blockly.isNumber(c)&&Blockly.isNumber(d)&&
Blockly.isNumber(e))c=Number(c),d=Number(d),e=Math.abs(Number(e)),0===c%1&&0===d%1&&0===e%1?(c<=d?(d++,a=0==c&&1==e?d:c+", "+d,1!=e&&(a+=", "+e)):(d--,a=c+", "+d+", -"+e),a="range("+a+")"):(a=c<d?h():k(),a+="("+c+", "+d+", "+e+")");else{var n=function(g,l){Blockly.isNumber(g)?g=Number(g):g.match(/^\w+$/)?g="float("+g+")":(l=Blockly.Python.nameDB_.getDistinctName(b+l,Blockly.VARIABLE_CATEGORY_NAME),m+=l+" = float("+g+")\n",g=l);return g};c=n(c,"_start");d=n(d,"_end");e=n(e,"_inc");"number"==typeof c&&
"number"==typeof d?(a=c<d?h():k(),a+="("+c+", "+d+", "+e+")"):a=a(c,d,e)}return m+="for "+b+" in "+a+":\n"+f};Blockly.Python.controls_forEach=function(a){var b=Blockly.Python.nameDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME),c=Blockly.Python.valueToCode(a,"LIST",Blockly.Python.ORDER_RELATIONAL)||"[]",d=Blockly.Python.statementToCode(a,"DO");d=Blockly.Python.addLoopTrap(d,a)||Blockly.Python.PASS;return"for "+b+" in "+c+":\n"+d};
Blockly.Python.controls_flow_statements=function(a){var b="";Blockly.Python.STATEMENT_PREFIX&&(b+=Blockly.Python.injectId(Blockly.Python.STATEMENT_PREFIX,a));Blockly.Python.STATEMENT_SUFFIX&&(b+=Blockly.Python.injectId(Blockly.Python.STATEMENT_SUFFIX,a));if(Blockly.Python.STATEMENT_PREFIX){var c=Blockly.Constants.Loops.CONTROL_FLOW_IN_LOOP_CHECK_MIXIN.getSurroundLoop(a);c&&!c.suppressPrefixSuffix&&(b+=Blockly.Python.injectId(Blockly.Python.STATEMENT_PREFIX,c))}switch(a.getFieldValue("FLOW")){case "BREAK":return b+
"break\n";case "CONTINUE":return b+"continue\n"}throw Error("Unknown flow statement.");};Blockly.Python.math={};Blockly.Python.addReservedWords("math,random,Number");Blockly.Python.math_number=function(a){a=Number(a.getFieldValue("NUM"));if(Infinity==a){a='float("inf")';var b=Blockly.Python.ORDER_FUNCTION_CALL}else-Infinity==a?(a='-float("inf")',b=Blockly.Python.ORDER_UNARY_SIGN):b=0>a?Blockly.Python.ORDER_UNARY_SIGN:Blockly.Python.ORDER_ATOMIC;return[a,b]};
Blockly.Python.math_arithmetic=function(a){var b={ADD:[" + ",Blockly.Python.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Python.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Python.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Python.ORDER_MULTIPLICATIVE],POWER:[" ** ",Blockly.Python.ORDER_EXPONENTIATION]}[a.getFieldValue("OP")],c=b[0];b=b[1];var d=Blockly.Python.valueToCode(a,"A",b)||"0";a=Blockly.Python.valueToCode(a,"B",b)||"0";return[d+c+a,b]};
Blockly.Python.math_single=function(a){var b=a.getFieldValue("OP");if("NEG"==b){var c=Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_UNARY_SIGN)||"0";return["-"+c,Blockly.Python.ORDER_UNARY_SIGN]}Blockly.Python.definitions_.import_math="import math";a="SIN"==b||"COS"==b||"TAN"==b?Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_MULTIPLICATIVE)||"0":Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_NONE)||"0";switch(b){case "ABS":c="math.fabs("+a+")";break;case "ROOT":c="math.sqrt("+
a+")";break;case "LN":c="math.log("+a+")";break;case "LOG10":c="math.log10("+a+")";break;case "EXP":c="math.exp("+a+")";break;case "POW10":c="math.pow(10,"+a+")";break;case "ROUND":c="round("+a+")";break;case "ROUNDUP":c="math.ceil("+a+")";break;case "ROUNDDOWN":c="math.floor("+a+")";break;case "SIN":c="math.sin("+a+" / 180.0 * math.pi)";break;case "COS":c="math.cos("+a+" / 180.0 * math.pi)";break;case "TAN":c="math.tan("+a+" / 180.0 * math.pi)"}if(c)return[c,Blockly.Python.ORDER_FUNCTION_CALL];switch(b){case "ASIN":c=
"math.asin("+a+") / math.pi * 180";break;case "ACOS":c="math.acos("+a+") / math.pi * 180";break;case "ATAN":c="math.atan("+a+") / math.pi * 180";break;default:throw Error("Unknown math operator: "+b);}return[c,Blockly.Python.ORDER_MULTIPLICATIVE]};
Blockly.Python.math_constant=function(a){var b={PI:["math.pi",Blockly.Python.ORDER_MEMBER],E:["math.e",Blockly.Python.ORDER_MEMBER],GOLDEN_RATIO:["(1 + math.sqrt(5)) / 2",Blockly.Python.ORDER_MULTIPLICATIVE],SQRT2:["math.sqrt(2)",Blockly.Python.ORDER_MEMBER],SQRT1_2:["math.sqrt(1.0 / 2)",Blockly.Python.ORDER_MEMBER],INFINITY:["float('inf')",Blockly.Python.ORDER_ATOMIC]};a=a.getFieldValue("CONSTANT");"INFINITY"!=a&&(Blockly.Python.definitions_.import_math="import math");return b[a]};
Blockly.Python.math_number_property=function(a){var b=Blockly.Python.valueToCode(a,"NUMBER_TO_CHECK",Blockly.Python.ORDER_MULTIPLICATIVE)||"0",c=a.getFieldValue("PROPERTY");if("PRIME"==c)return Blockly.Python.definitions_.import_math="import math",Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number",[Blockly.Python.provideFunction_("math_isPrime",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(n):","  # https://en.wikipedia.org/wiki/Primality_test#Naive_methods",
"  # If n is not a number but a string, try parsing it.","  if not isinstance(n, Number):","    try:","      n = float(n)","    except:","      return False","  if n == 2 or n == 3:","    return True","  # False if n is negative, is 1, or not whole, or if n is divisible by 2 or 3.","  if n <= 1 or n % 1 != 0 or n % 2 == 0 or n % 3 == 0:","    return False","  # Check all the numbers of form 6k +/- 1, up to sqrt(n).","  for x in range(6, int(math.sqrt(n)) + 2, 6):","    if n % (x - 1) == 0 or n % (x + 1) == 0:",
"      return False","  return True"])+"("+b+")",Blockly.Python.ORDER_FUNCTION_CALL];switch(c){case "EVEN":var d=b+" % 2 == 0";break;case "ODD":d=b+" % 2 == 1";break;case "WHOLE":d=b+" % 1 == 0";break;case "POSITIVE":d=b+" > 0";break;case "NEGATIVE":d=b+" < 0";break;case "DIVISIBLE_BY":a=Blockly.Python.valueToCode(a,"DIVISOR",Blockly.Python.ORDER_MULTIPLICATIVE);if(!a||"0"==a)return["False",Blockly.Python.ORDER_ATOMIC];d=b+" % "+a+" == 0"}return[d,Blockly.Python.ORDER_RELATIONAL]};
Blockly.Python.math_change=function(a){Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number";var b=Blockly.Python.valueToCode(a,"DELTA",Blockly.Python.ORDER_ADDITIVE)||"0";a=Blockly.Python.nameDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME);return a+" = ("+a+" if isinstance("+a+", Number) else 0) + "+b+"\n"};Blockly.Python.math_round=Blockly.Python.math_single;Blockly.Python.math_trig=Blockly.Python.math_single;
Blockly.Python.math_on_list=function(a){var b=a.getFieldValue("OP");a=Blockly.Python.valueToCode(a,"LIST",Blockly.Python.ORDER_NONE)||"[]";switch(b){case "SUM":b="sum("+a+")";break;case "MIN":b="min("+a+")";break;case "MAX":b="max("+a+")";break;case "AVERAGE":Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number";b=Blockly.Python.provideFunction_("math_mean",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  localList = [e for e in myList if isinstance(e, Number)]",
"  if not localList: return","  return float(sum(localList)) / len(localList)"]);b=b+"("+a+")";break;case "MEDIAN":Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number";b=Blockly.Python.provideFunction_("math_median",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  localList = sorted([e for e in myList if isinstance(e, Number)])","  if not localList: return","  if len(localList) % 2 == 0:","    return (localList[len(localList) // 2 - 1] + localList[len(localList) // 2]) / 2.0",
"  else:","    return localList[(len(localList) - 1) // 2]"]);b=b+"("+a+")";break;case "MODE":b=Blockly.Python.provideFunction_("math_modes",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(some_list):","  modes = []","  # Using a lists of [item, count] to keep count rather than dict",'  # to avoid "unhashable" errors when the counted item is itself a list or dict.',"  counts = []","  maxCount = 1","  for item in some_list:","    found = False","    for count in counts:","      if count[0] == item:",
"        count[1] += 1","        maxCount = max(maxCount, count[1])","        found = True","    if not found:","      counts.append([item, 1])","  for counted_item, item_count in counts:","    if item_count == maxCount:","      modes.append(counted_item)","  return modes"]);b=b+"("+a+")";break;case "STD_DEV":Blockly.Python.definitions_.import_math="import math";b=Blockly.Python.provideFunction_("math_standard_deviation",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(numbers):","  n = len(numbers)",
"  if n == 0: return","  mean = float(sum(numbers)) / n","  variance = sum((x - mean) ** 2 for x in numbers) / n","  return math.sqrt(variance)"]);b=b+"("+a+")";break;case "RANDOM":Blockly.Python.definitions_.import_random="import random";b="random.choice("+a+")";break;default:throw Error("Unknown operator: "+b);}return[b,Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.math_modulo=function(a){var b=Blockly.Python.valueToCode(a,"DIVIDEND",Blockly.Python.ORDER_MULTIPLICATIVE)||"0";a=Blockly.Python.valueToCode(a,"DIVISOR",Blockly.Python.ORDER_MULTIPLICATIVE)||"0";return[b+" % "+a,Blockly.Python.ORDER_MULTIPLICATIVE]};
Blockly.Python.math_constrain=function(a){var b=Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"0",c=Blockly.Python.valueToCode(a,"LOW",Blockly.Python.ORDER_NONE)||"0";a=Blockly.Python.valueToCode(a,"HIGH",Blockly.Python.ORDER_NONE)||"float('inf')";return["min(max("+b+", "+c+"), "+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.math_random_int=function(a){Blockly.Python.definitions_.import_random="import random";var b=Blockly.Python.valueToCode(a,"FROM",Blockly.Python.ORDER_NONE)||"0";a=Blockly.Python.valueToCode(a,"TO",Blockly.Python.ORDER_NONE)||"0";return["random.randint("+b+", "+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.math_random_float=function(a){Blockly.Python.definitions_.import_random="import random";return["random.random()",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.math_atan2=function(a){Blockly.Python.definitions_.import_math="import math";var b=Blockly.Python.valueToCode(a,"X",Blockly.Python.ORDER_NONE)||"0";return["math.atan2("+(Blockly.Python.valueToCode(a,"Y",Blockly.Python.ORDER_NONE)||"0")+", "+b+") / math.pi * 180",Blockly.Python.ORDER_MULTIPLICATIVE]};Blockly.Python.math_convert=function(a){var b=Blockly.Python.valueToCode(a,"STR",Blockly.Python.ORDER_NONE)||"0";return[a.getFieldValue("TYPE")+"("+b+")",Blockly.Python.ORDER_MULTIPLICATIVE]};Blockly.Python.MLGame={};
Blockly.Python.mlplay_class=function(a){for(var b=[],c,d=a.workspace,e=Blockly.Variables.allUsedVarModels(d)||[],f=0;c=e[f];f++)c=c.name,-1==a.getVars().indexOf(c)&&b.push(Blockly.Python.nameDB_.getName(c,Blockly.VARIABLE_CATEGORY_NAME));d=Blockly.Variables.allDeveloperVariables(d);for(f=0;f<d.length;f++)b.push(Blockly.Python.nameDB_.getName(d[f],Blockly.Names.DEVELOPER_VARIABLE_TYPE));b=b.length?Blockly.Python.INDENT+"global "+b.join(", ")+"\n":"";d=Blockly.Python.statementToCode(a,"INIT")||Blockly.Python.PASS;
e="";c=["self","scene_info","keyboard"];if("MLPLAY_INIT_INFO_OPTIONS"in Blockly.Msg)for(f=0;f<Blockly.Msg.MLPLAY_INIT_INFO_OPTIONS.length;f++)e+=", "+Blockly.Msg.MLPLAY_INIT_INFO_OPTIONS[f][1],c.push(Blockly.Msg.MLPLAY_INIT_INFO_OPTIONS[f][1]);Blockly.Python.addReservedWords(c.join());f=Blockly.Python.statementToCode(a,"UPDATE")||Blockly.Python.PASS;a=Blockly.Python.statementToCode(a,"RESET")||Blockly.Python.PASS;return"class MLPlay:\n"+Blockly.Python.prefixLines("def __init__(self"+e+"):\n"+b+d+
"def update(self, scene_info, keyboard):\n"+b+f+"def reset(self):\n"+b+a,Blockly.Python.INDENT)};Blockly.Python.mlplay_init_info=function(a){return[a.getFieldValue("FIELD"),Blockly.Python.ORDER_STRING_CONVERSION]};Blockly.Python.mlplay_player_status=function(a){return['"'+a.getFieldValue("STATUS")+'"',Blockly.Python.ORDER_STRING_CONVERSION]};Blockly.Python.mlplay_game_status=function(a){return['"'+a.getFieldValue("STATUS")+'"',Blockly.Python.ORDER_STRING_CONVERSION]};
Blockly.Python.mlplay_get_info=function(a){return[a.getFieldValue("FIELD"),Blockly.Python.ORDER_STRING_CONVERSION]};Blockly.Python.mlplay_get_constant=function(a){return[a.getFieldValue("CONSTANT").split("/").pop(),Blockly.Python.ORDER_ATOMIC]};Blockly.Python.mlplay_return_action=function(a){a=a.getFieldValue("ACTION");return"["==a[0]||"{"==a[0]?"return "+a+"\n":'return "'+a+'"\n'};
Blockly.Python.mlplay_return_mazecar_action=function(a){var b=Blockly.Python.valueToCode(a,"LEFT_RPM",Blockly.Python.ORDER_NONE)||"0";a=Blockly.Python.valueToCode(a,"RIGHT_RPM",Blockly.Python.ORDER_NONE)||"0";return"return [{'left_PWM': "+b+", 'right_PWM': "+a+"}]\n"};Blockly.Python.mlplay_is_key_pressed=function(a){Blockly.Python.definitions_.import_pygame="import pygame";return["pygame.K_"+a.getFieldValue("KEY")+" in keyboard",Blockly.Python.ORDER_RELATIONAL]};Blockly.Python.Model={};
Blockly.Python.model_create_classification=function(a){switch(a.getFieldValue("MODEL")){case "KNeighborsClassifier":Blockly.Python.definitions_.import_neighbors="from sklearn import neighbors";var b=a.getFieldValue("PARAM_K"),c=a.getFieldValue("PARAM_WEIGHTS");a=a.getFieldValue("PARAM_ALGORITHM");b="neighbors.KNeighborsClassifier("+b+", weights='"+c+"', algorithm='"+a+"')";break;case "LinearSVC":Blockly.Python.definitions_.import_svm="from sklearn import svm";b=a.getFieldValue("PARAM_PENALTY");c=
a.getFieldValue("PARAM_LOSS");a=a.getFieldValue("PARAM_C");b="svm.LinearSVC('"+b+"', '"+c+"', C="+a+")";break;case "DecisionTreeClassifier":Blockly.Python.definitions_.import_tree="from sklearn import tree";b=a.getFieldValue("PARAM_MAX_DEPTH");a=a.getFieldValue("PARAM_MIN_SAMPLES_SPLIT");0==a&&(a="None");b="tree.DecisionTreeClassifier(max_depth="+b+", min_samples_split="+a+")";break;case "RandomForestClassifier":Blockly.Python.definitions_.import_ensemble="from sklearn import ensemble";c=a.getFieldValue("PARAM_N_ESTIMATORS");
b=a.getFieldValue("PARAM_MAX_DEPTH");a=a.getFieldValue("PARAM_MIN_SAMPLES_SPLIT");0==a&&(a="None");b="ensemble.RandomForestClassifier("+c+", max_depth="+b+", min_samples_split="+a+")";break;case "MLPClassifier":Blockly.Python.definitions_.import_neural_network="from sklearn import neural_network";b=Blockly.Python.valueToCode(a,"PARAM0",Blockly.Python.ORDER_COLLECTION)||"[1]";c=a.getFieldValue("PARAM_ACTIVATION");a=a.getFieldValue("PARAM_BATCH_SIZE");b="neural_network.MLPClassifier("+b+", '"+c+"', batch_size="+
a+")";break;case "SGDClassifier":Blockly.Python.definitions_.import_linear_model="from sklearn import linear_model",c=a.getFieldValue("PARAM_LOSS"),b=a.getFieldValue("PARAM_PENALTY"),b="linear_model.SGDClassifier('"+c+"', penalty='"+b+"')"}return[b,Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.model_create_regression=function(a){switch(a.getFieldValue("MODEL")){case "KNeighborsRegressor":Blockly.Python.definitions_.import_neighbors="from sklearn import neighbors";var b=a.getFieldValue("PARAM_K"),c=a.getFieldValue("PARAM_WEIGHTS");a=a.getFieldValue("PARAM_ALGORITHM");b="neighbors.KNeighborsRegressor("+b+", weights='"+c+"', algorithm='"+a+"')";break;case "LinearSVR":Blockly.Python.definitions_.import_svm="from sklearn import svm";b="svm.LinearSVR(C="+a.getFieldValue("PARAM_C")+
")";break;case "DecisionTreeRegressor":Blockly.Python.definitions_.import_tree="from sklearn import tree";b=a.getFieldValue("PARAM_MAX_DEPTH");a=a.getFieldValue("PARAM_MIN_SAMPLES_SPLIT");0==a&&(a="None");b="tree.DecisionTreeRegressor(max_depth="+b+", min_samples_split="+a+")";break;case "RandomForestRegressor":Blockly.Python.definitions_.import_ensemble="from sklearn import ensemble";c=a.getFieldValue("PARAM_N_ESTIMATORS");b=a.getFieldValue("PARAM_MAX_DEPTH");a=a.getFieldValue("PARAM_MIN_SAMPLES_SPLIT");
0==a&&(a="None");b="ensemble.RandomForestRegressor("+c+", max_depth="+b+", min_samples_split="+a+")";break;case "MLPRegressor":Blockly.Python.definitions_.import_neural_network="from sklearn import neural_network";b=Blockly.Python.valueToCode(a,"PARAM0",Blockly.Python.ORDER_COLLECTION)||"[1]";c=a.getFieldValue("PARAM_ACTIVATION");a=a.getFieldValue("PARAM_BATCH_SIZE");b="neural_network.MLPRegressor("+b+", '"+c+"', batch_size="+a+")";break;case "SGDRegressor":Blockly.Python.definitions_.import_linear_model=
"from sklearn import linear_model",b=a.getFieldValue("PARAM_LOSS"),a=a.getFieldValue("PARAM_PENALTY"),b="linear_model.SGDRegressor('"+b+"', penalty='"+a+"')"}return[b,Blockly.Python.ORDER_ATOMIC]};Blockly.Python.model_train=function(a){var b=Blockly.Python.valueToCode(a,"X",Blockly.Python.ORDER_COLLECTION)||"[]",c=Blockly.Python.valueToCode(a,"Y",Blockly.Python.ORDER_COLLECTION)||"[]";return(Blockly.Python.valueToCode(a,"MODEL",Blockly.Python.ORDER_NONE)||"None")+".fit("+b+", "+c+")\n"};
Blockly.Python.model_predict=function(a){var b=Blockly.Python.valueToCode(a,"MODEL",Blockly.Python.ORDER_NONE)||"None";a=Blockly.Python.valueToCode(a,"X",Blockly.Python.ORDER_COLLECTION)||"[]";return[b+".predict("+a+").tolist()",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.model_evaluate_classification=function(a){Blockly.Python.definitions_.import_metrics="from sklearn import metrics";var b=Blockly.Python.valueToCode(a,"TRUE",Blockly.Python.ORDER_COLLECTION)||"[]";a=Blockly.Python.valueToCode(a,"PRED",Blockly.Python.ORDER_COLLECTION)||"[]";return["metrics.accuracy_score("+b+", "+a+")",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.model_evaluate_regression=function(a){Blockly.Python.definitions_.import_metrics="from sklearn import metrics";var b=Blockly.Python.valueToCode(a,"TRUE",Blockly.Python.ORDER_COLLECTION)||"[]",c=Blockly.Python.valueToCode(a,"PRED",Blockly.Python.ORDER_COLLECTION)||"[]";switch(a.getFieldValue("FUNC")){case "R2":var d="metrics.r2_score("+b+", "+c+")";break;case "MAE":d="metrics.mean_absolute_error("+b+", "+c+")";break;case "MSE":d="metrics.mean_squared_error("+b+", "+c+")"}return[d,Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.model_train_test_split=function(a){Blockly.Python.definitions_.import_model_selection="from sklearn import model_selection";var b=Blockly.Python.valueToCode(a,"X",Blockly.Python.ORDER_COLLECTION)||"[]",c=Blockly.Python.valueToCode(a,"Y",Blockly.Python.ORDER_COLLECTION)||"[]",d=Blockly.Python.valueToCode(a,"TEST_SIZE",Blockly.Python.ORDER_ATOMIC)||"0",e=a.getFieldValue("SHUFFLE"),f=Blockly.Python.valueToCode(a,"TRAIN_DATA",Blockly.Python.ORDER_COLLECTION)||"[]",m=Blockly.Python.valueToCode(a,
"TEST_DATA",Blockly.Python.ORDER_COLLECTION)||"[]",h=Blockly.Python.valueToCode(a,"TRAIN_TARGET",Blockly.Python.ORDER_COLLECTION)||"[]";a=Blockly.Python.valueToCode(a,"TEST_TARGET",Blockly.Python.ORDER_COLLECTION)||"[]";return f+", "+m+", "+h+", "+a+" = model_selection.train_test_split("+b+", "+c+", test_size="+d+", shuffle="+e+")\n"};
Blockly.Python.model_k_fold=function(a){Blockly.Python.definitions_.import_model_selection="from sklearn import model_selection";Blockly.Python.definitions_.import_np="import numpy as np";var b=Blockly.Python.valueToCode(a,"X",Blockly.Python.ORDER_COLLECTION)||"[]",c=Blockly.Python.valueToCode(a,"Y",Blockly.Python.ORDER_COLLECTION)||"[]",d=Blockly.Python.valueToCode(a,"K",Blockly.Python.ORDER_ATOMIC)||"2";a=a.getFieldValue("SHUFFLE");return["[[np.array("+b+")[index1].tolist(), np.array("+b+")[index2].tolist(), np.array("+
c+")[index1].tolist(), np.array("+c+")[index2].tolist()] for index1, index2 in model_selection.KFold(n_splits="+d+", shuffle="+a+").split("+b+", "+c+")]",Blockly.Python.ORDER_COLLECTION]};Blockly.Python.Ndarrays={};Blockly.Python.ndarrays_create_with=function(a){Blockly.Python.definitions_.import_np="import numpy as np";for(var b=Array(a.dimCount_),c=0;c<a.dimCount_;c++)b[c]=Blockly.Python.valueToCode(a,"DIM"+c,Blockly.Python.ORDER_NONE)||"0";a=Blockly.Python.valueToCode(a,"FILL",Blockly.Python.ORDER_NONE)||"0";return["np.full(("+b.join(", ")+"), "+a+")",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.ndarrays_create_with_list=function(a){Blockly.Python.definitions_.import_np="import numpy as np";return["np.array("+(Blockly.Python.valueToCode(a,"LIST",Blockly.Python.ORDER_NONE)||"0")+")",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.ndarrays_to_list=function(a){Blockly.Python.definitions_.import_np="import numpy as np";return[(Blockly.Python.valueToCode(a,"ARRAY",Blockly.Python.ORDER_NONE)||"0")+".tolist()",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.Plot={};Blockly.Python.plot_plot=function(a){Blockly.Python.definitions_.import_plt="import matplotlib.pyplot as plt";var b=Blockly.Python.valueToCode(a,"X",Blockly.Python.ORDER_NONE)||"[]",c=Blockly.Python.valueToCode(a,"Y",Blockly.Python.ORDER_NONE)||"[]",d=a.getFieldValue("MARKER"),e=a.getFieldValue("LINE");a=a.getFieldValue("COLOR");return"plt.plot("+b+", "+c+', "'+d+e+'", color="'+a+'")\nplt.show()\n'};Blockly.Python.procedures={};
Blockly.Python.procedures_defreturn=function(a){for(var b=[],c=a.workspace,d=Blockly.Variables.allUsedVarModels(c)||[],e=0,f;f=d[e];e++)f=f.name,-1==a.getVars().indexOf(f)&&b.push(Blockly.Python.nameDB_.getName(f,Blockly.VARIABLE_CATEGORY_NAME));d=Blockly.Variables.allDeveloperVariables(c);for(e=0;e<d.length;e++)b.push(Blockly.Python.nameDB_.getName(d[e],Blockly.Names.DEVELOPER_VARIABLE_TYPE));b=b.length?Blockly.Python.INDENT+"global "+b.join(", ")+"\n":"";c=Blockly.Python.nameDB_.getName(a.getFieldValue("NAME"),Blockly.PROCEDURE_CATEGORY_NAME);
f="";Blockly.Python.STATEMENT_PREFIX&&(f+=Blockly.Python.injectId(Blockly.Python.STATEMENT_PREFIX,a));Blockly.Python.STATEMENT_SUFFIX&&(f+=Blockly.Python.injectId(Blockly.Python.STATEMENT_SUFFIX,a));f&&(f=Blockly.Python.prefixLines(f,Blockly.Python.INDENT));var m="";Blockly.Python.INFINITE_LOOP_TRAP&&(m=Blockly.Python.prefixLines(Blockly.Python.injectId(Blockly.Python.INFINITE_LOOP_TRAP,a),Blockly.Python.INDENT));var h=Blockly.Python.statementToCode(a,"STACK"),k=Blockly.Python.valueToCode(a,"RETURN",
Blockly.Python.ORDER_NONE)||"",n="";h&&k&&(n=f);k?k=Blockly.Python.INDENT+"return "+k+"\n":h||(h=Blockly.Python.PASS);var g=[];d=a.getVars();for(e=0;e<d.length;e++)g[e]=Blockly.Python.nameDB_.getName(d[e],Blockly.VARIABLE_CATEGORY_NAME);b="def "+c+"("+g.join(", ")+"):\n"+b+f+m+h+n+k;b=Blockly.Python.scrub_(a,b);Blockly.Python.definitions_["%"+c]=b;return null};Blockly.Python.procedures_defnoreturn=Blockly.Python.procedures_defreturn;
Blockly.Python.procedures_callreturn=function(a){for(var b=Blockly.Python.nameDB_.getName(a.getFieldValue("NAME"),Blockly.PROCEDURE_CATEGORY_NAME),c=[],d=a.getVars(),e=0;e<d.length;e++)c[e]=Blockly.Python.valueToCode(a,"ARG"+e,Blockly.Python.ORDER_NONE)||"None";return[b+"("+c.join(", ")+")",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.procedures_callnoreturn=function(a){return Blockly.Python.procedures_callreturn(a)[0]+"\n"};
Blockly.Python.procedures_ifreturn=function(a){var b="";Blockly.Python.STATEMENT_SUFFIX&&(b+=Blockly.Python.injectId(Blockly.Python.STATEMENT_SUFFIX,a));a.hasReturnValue_?(a=Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"None",b+="return "+a+"\n"):b+="return\n";return b};Blockly.Python.texts={};Blockly.Python.text=function(a){return[Blockly.Python.quote_(a.getFieldValue("TEXT")),Blockly.Python.ORDER_ATOMIC]};Blockly.Python.text_multiline=function(a){a=Blockly.Python.multiline_quote_(a.getFieldValue("TEXT"));var b=-1!=a.indexOf("+")?Blockly.Python.ORDER_ADDITIVE:Blockly.Python.ORDER_ATOMIC;return[a,b]};Blockly.Python.text.forceString_=function(a){return Blockly.Python.text.forceString_.strRegExp.test(a)?[a,Blockly.Python.ORDER_ATOMIC]:["str("+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.text.forceString_.strRegExp=/^\s*'([^']|\\')*'\s*$/;
Blockly.Python.text_join=function(a){switch(a.itemCount_){case 0:return["''",Blockly.Python.ORDER_ATOMIC];case 1:return a=Blockly.Python.valueToCode(a,"ADD0",Blockly.Python.ORDER_NONE)||"''",Blockly.Python.text.forceString_(a);case 2:var b=Blockly.Python.valueToCode(a,"ADD0",Blockly.Python.ORDER_NONE)||"''";a=Blockly.Python.valueToCode(a,"ADD1",Blockly.Python.ORDER_NONE)||"''";a=Blockly.Python.text.forceString_(b)[0]+" + "+Blockly.Python.text.forceString_(a)[0];return[a,Blockly.Python.ORDER_ADDITIVE];
default:b=[];for(var c=0;c<a.itemCount_;c++)b[c]=Blockly.Python.valueToCode(a,"ADD"+c,Blockly.Python.ORDER_NONE)||"''";a=Blockly.Python.nameDB_.getDistinctName("x",Blockly.VARIABLE_CATEGORY_NAME);a="''.join([str("+a+") for "+a+" in ["+b.join(", ")+"]])";return[a,Blockly.Python.ORDER_FUNCTION_CALL]}};
Blockly.Python.text_append=function(a){var b=Blockly.Python.nameDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME);a=Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_NONE)||"''";return b+" = str("+b+") + "+Blockly.Python.text.forceString_(a)[0]+"\n"};Blockly.Python.text_length=function(a){return["len("+(Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"''")+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.text_isEmpty=function(a){return["not len("+(Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"''")+")",Blockly.Python.ORDER_LOGICAL_NOT]};
Blockly.Python.text_indexOf=function(a){var b="FIRST"==a.getFieldValue("END")?"find":"rfind",c=Blockly.Python.valueToCode(a,"FIND",Blockly.Python.ORDER_NONE)||"''";b=(Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_MEMBER)||"''")+"."+b+"("+c+")";return a.workspace.options.oneBasedIndex?[b+" + 1",Blockly.Python.ORDER_ADDITIVE]:[b,Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.text_charAt=function(a){var b=a.getFieldValue("WHERE")||"FROM_START",c=Blockly.Python.valueToCode(a,"VALUE","RANDOM"==b?Blockly.Python.ORDER_NONE:Blockly.Python.ORDER_MEMBER)||"''";switch(b){case "FIRST":return[c+"[0]",Blockly.Python.ORDER_MEMBER];case "LAST":return[c+"[-1]",Blockly.Python.ORDER_MEMBER];case "FROM_START":return a=Blockly.Python.getAdjustedInt(a,"AT"),[c+"["+a+"]",Blockly.Python.ORDER_MEMBER];case "FROM_END":return a=Blockly.Python.getAdjustedInt(a,"AT",1,!0),[c+"["+
a+"]",Blockly.Python.ORDER_MEMBER];case "RANDOM":return Blockly.Python.definitions_.import_random="import random",[Blockly.Python.provideFunction_("text_random_letter",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(text):","  x = int(random.random() * len(text))","  return text[x];"])+"("+c+")",Blockly.Python.ORDER_FUNCTION_CALL]}throw Error("Unhandled option (text_charAt).");};
Blockly.Python.text_getSubstring=function(a){var b=a.getFieldValue("WHERE1"),c=a.getFieldValue("WHERE2"),d=Blockly.Python.valueToCode(a,"STRING",Blockly.Python.ORDER_MEMBER)||"''";switch(b){case "FROM_START":b=Blockly.Python.getAdjustedInt(a,"AT1");"0"==b&&(b="");break;case "FROM_END":b=Blockly.Python.getAdjustedInt(a,"AT1",1,!0);break;case "FIRST":b="";break;default:throw Error("Unhandled option (text_getSubstring)");}switch(c){case "FROM_START":a=Blockly.Python.getAdjustedInt(a,"AT2",1);break;case "FROM_END":a=
Blockly.Python.getAdjustedInt(a,"AT2",0,!0);Blockly.isNumber(String(a))?"0"==a&&(a=""):(Blockly.Python.definitions_.import_sys="import sys",a+=" or sys.maxsize");break;case "LAST":a="";break;default:throw Error("Unhandled option (text_getSubstring)");}return[d+"["+b+" : "+a+"]",Blockly.Python.ORDER_MEMBER]};
Blockly.Python.text_changeCase=function(a){var b={UPPERCASE:".upper()",LOWERCASE:".lower()",TITLECASE:".title()"}[a.getFieldValue("CASE")];return[(Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_MEMBER)||"''")+b,Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.text_trim=function(a){var b={LEFT:".lstrip()",RIGHT:".rstrip()",BOTH:".strip()"}[a.getFieldValue("MODE")];return[(Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_MEMBER)||"''")+b,Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.text_print=function(a){a=Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_NONE)||"''";Blockly.Python.definitions_.import_sys="import sys";Blockly.Python.definitions_.import_io="import io";Blockly.Python.provideFunction_("stdout_redirect",["if sys.stdout == sys.__stdout__:","  sys.stdout = io.TextIOWrapper(open(sys.stdout.fileno(), 'wb', 0), encoding='utf-8', write_through=True)"]);return"print("+a+")\n"};
Blockly.Python.text_prompt_ext=function(a){var b=Blockly.Python.provideFunction_("text_prompt",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(msg):","  try:","    return raw_input(msg)","  except NameError:","    return input(msg)"]),c=a.getField("TEXT")?Blockly.Python.quote_(a.getFieldValue("TEXT")):Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_NONE)||"''";b=b+"("+c+")";"NUMBER"==a.getFieldValue("TYPE")&&(b="float("+b+")");return[b,Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.text_prompt=Blockly.Python.text_prompt_ext;Blockly.Python.text_count=function(a){var b=Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_MEMBER)||"''";a=Blockly.Python.valueToCode(a,"SUB",Blockly.Python.ORDER_NONE)||"''";return[b+".count("+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.text_replace=function(a){var b=Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_MEMBER)||"''",c=Blockly.Python.valueToCode(a,"FROM",Blockly.Python.ORDER_NONE)||"''";a=Blockly.Python.valueToCode(a,"TO",Blockly.Python.ORDER_NONE)||"''";return[b+".replace("+c+", "+a+")",Blockly.Python.ORDER_MEMBER]};Blockly.Python.text_reverse=function(a){return[(Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_MEMBER)||"''")+"[::-1]",Blockly.Python.ORDER_MEMBER]};Blockly.Python.variables={};Blockly.Python.variables_get=function(a){return[Blockly.Python.nameDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME),Blockly.Python.ORDER_ATOMIC]};Blockly.Python.variables_set=function(a){var b=Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"0";return Blockly.Python.nameDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME)+" = "+b+"\n"};/*

 Copyright 2018 Google LLC
 SPDX-License-Identifier: Apache-2.0
*/
Blockly.Python.variablesDynamic={};Blockly.Python.variables_get_dynamic=Blockly.Python.variables_get;Blockly.Python.variables_set_dynamic=Blockly.Python.variables_set;
return Blockly.Python;
}));


//# sourceMappingURL=python_compressed.js.map
