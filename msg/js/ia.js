// This file was automatically generated.  Do not modify.

'use strict';

Blockly.Msg["ADD_COMMENT"] = "Adder commento";
Blockly.Msg["ARKANOID_ACTION_1"] = "serving left";  // untranslated
Blockly.Msg["ARKANOID_ACTION_2"] = "serving right";  // untranslated
Blockly.Msg["ARKANOID_ACTION_3"] = "moving left";  // untranslated
Blockly.Msg["ARKANOID_ACTION_4"] = "moving right";  // untranslated
Blockly.Msg["ARKANOID_ACTION_5"] = "doing nothing";  // untranslated
Blockly.Msg["ARKANOID_ACTION_6"] = "reset";  // untranslated
Blockly.Msg["ARKANOID_CONSTANT_1"] = "left boundary";  // untranslated
Blockly.Msg["ARKANOID_CONSTANT_2"] = "right boundary";  // untranslated
Blockly.Msg["ARKANOID_CONSTANT_3"] = "top boundary";  // untranslated
Blockly.Msg["ARKANOID_CONSTANT_4"] = "bottom boundary";  // untranslated
Blockly.Msg["ARKANOID_CONSTANT_5"] = "platform width";  // untranslated
Blockly.Msg["ARKANOID_CONSTANT_6"] = "platform height";  // untranslated
Blockly.Msg["ARKANOID_CONSTANT_7"] = "brick width";  // untranslated
Blockly.Msg["ARKANOID_CONSTANT_8"] = "brick height";  // untranslated
Blockly.Msg["ARKANOID_GAME_STATUS_1"] = "alive";  // untranslated
Blockly.Msg["ARKANOID_GAME_STATUS_2"] = "pass";  // untranslated
Blockly.Msg["ARKANOID_GAME_STATUS_3"] = "over";  // untranslated
Blockly.Msg["ARKANOID_SCENE_INFO_1"] = "# frame";  // untranslated
Blockly.Msg["ARKANOID_SCENE_INFO_2"] = "game status";  // untranslated
Blockly.Msg["ARKANOID_SCENE_INFO_3"] = "x coordinate of ball";  // untranslated
Blockly.Msg["ARKANOID_SCENE_INFO_4"] = "y coordinate of ball";  // untranslated
Blockly.Msg["ARKANOID_SCENE_INFO_5"] = "x coordinate of platform";  // untranslated
Blockly.Msg["ARKANOID_SCENE_INFO_6"] = "y coordinate of platform";  // untranslated
Blockly.Msg["ARKANOID_SCENE_INFO_7"] = "list of brick positions";  // untranslated
Blockly.Msg["ARKANOID_SCENE_INFO_8"] = "list of hard brick positions";  // untranslated
Blockly.Msg["ARKANOID_SCENE_INFO_9"] = "dictionary of all information";  // untranslated
Blockly.Msg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Impossibile deler le variabile '%1' perque illo face parte del definition del function '%2'";
Blockly.Msg["CHANGE_VALUE_TITLE"] = "Cambiar valor:";
Blockly.Msg["CLEAN_UP"] = "Rangiar le blocos";
Blockly.Msg["COLLAPSED_WARNINGS_WARNING"] = "Blocos plicate contine advertimentos.";
Blockly.Msg["COLLAPSE_ALL"] = "Plicar blocos";
Blockly.Msg["COLLAPSE_BLOCK"] = "Plicar bloco";
Blockly.Msg["COLOUR_BLEND_COLOUR1"] = "color 1";
Blockly.Msg["COLOUR_BLEND_COLOUR2"] = "color 2";
Blockly.Msg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
Blockly.Msg["COLOUR_BLEND_RATIO"] = "ration";
Blockly.Msg["COLOUR_BLEND_TITLE"] = "miscer";
Blockly.Msg["COLOUR_BLEND_TOOLTIP"] = "Misce duo colores con un ration specificate (0.0 - 1.0).";
Blockly.Msg["COLOUR_PICKER_HELPURL"] = "https://ia.wikipedia.org/wiki/Color";
Blockly.Msg["COLOUR_PICKER_TOOLTIP"] = "Elige un color del paletta.";
Blockly.Msg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
Blockly.Msg["COLOUR_RANDOM_TITLE"] = "color aleatori";
Blockly.Msg["COLOUR_RANDOM_TOOLTIP"] = "Eliger un color al hasardo.";
Blockly.Msg["COLOUR_RGB_BLUE"] = "blau";
Blockly.Msg["COLOUR_RGB_GREEN"] = "verde";
Blockly.Msg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
Blockly.Msg["COLOUR_RGB_RED"] = "rubie";
Blockly.Msg["COLOUR_RGB_TITLE"] = "colorar con";
Blockly.Msg["COLOUR_RGB_TOOLTIP"] = "Crear un color con le quantitate specificate de rubie, verde e blau. Tote le valores debe esser inter 0 e 100.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "escappar del bucla";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "continuar con le proxime iteration del bucla";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Escappar del bucla continente.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Saltar le resto de iste bucla e continuar con le proxime iteration.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Attention: Iste bloco pote solmente esser usate in un bucla.";
Blockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_TITLE"] = "pro cata elemento %1 in lista %2";
Blockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "Pro cata elemento in un lista, mitter lo in le variabile '%1' e exequer certe instructiones.";
Blockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg["CONTROLS_FOR_TITLE"] = "contar con %1 de %2 a %3 per %4";
Blockly.Msg["CONTROLS_FOR_TOOLTIP"] = "Mitter in le variabile '%1' le valores ab le numero initial usque al numero final, con passos secundo le intervallo specificate, e exequer le blocos specificate.";
Blockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Adder un condition al bloco \"si\".";
Blockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "Adder un condition final de reserva al bloco \"si\".";
Blockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "Adde, remove o reordina sectiones pro reconfigurar iste bloco \"si\".";
Blockly.Msg["CONTROLS_IF_MSG_ELSE"] = "si non";
Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "si non si";
Blockly.Msg["CONTROLS_IF_MSG_IF"] = "si";
Blockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "Si un valor es ver, exequer certe instructiones.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "Si un valor es ver, exequer le prime bloco de instructiones. Si non, exequer le secunde bloco de instructiones.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "Si le prime valor es ver, exequer le prime bloco de instructiones. Si non, si le secunde valor es ver, exequer le secunde bloco de instructiones.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "Si le prime valor es ver, exequer le prime bloco de instructiones. Si non, si le secunde valor es ver, exequer le secunde bloco de instructiones. Si necun del valores es ver, exequer le ultime bloco de instructiones.";
Blockly.Msg["CONTROLS_REPEAT_HELPURL"] = "https://ia.wikipedia.org/wiki/Bucla_for";
Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"] = "face";
Blockly.Msg["CONTROLS_REPEAT_TITLE"] = "repeter %1 vices";
Blockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "Exequer certe instructiones plure vices.";
Blockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "repeter usque a";
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "repeter durante que";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Durante que un valor es false, exequer certe instructiones.";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Durante que un valor es ver, exequer certe instructiones.";
Blockly.Msg["DELETE_ALL_BLOCKS"] = "Deler tote le %1 blocos?";
Blockly.Msg["DELETE_BLOCK"] = "Deler bloco";
Blockly.Msg["DELETE_VARIABLE"] = "Deler le variabile '%1'";
Blockly.Msg["DELETE_VARIABLE_CONFIRMATION"] = "Deler %1 usos del variabile '%2'?";
Blockly.Msg["DELETE_X_BLOCKS"] = "Deler %1 blocos";
Blockly.Msg["DIALOG_CANCEL"] = "Cancellar";
Blockly.Msg["DIALOG_OK"] = "OK";
Blockly.Msg["DICTS_CREATE_EMPTY_TITLE"] = "create empty dictionary";  // untranslated
Blockly.Msg["DICTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "dictionary";  // untranslated
Blockly.Msg["DICTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this dictionary block.";  // untranslated
Blockly.Msg["DICTS_CREATE_WITH_INPUT_WITH"] = "create dictionary with";  // untranslated
Blockly.Msg["DICTS_CREATE_WITH_ITEM_KEY"] = "key";  // untranslated
Blockly.Msg["DICTS_CREATE_WITH_ITEM_TITLE"] = "key-value";  // untranslated
Blockly.Msg["DICTS_CREATE_WITH_ITEM_TOOLTIP"] = "Make a new key-value pair.";  // untranslated
Blockly.Msg["DICTS_CREATE_WITH_ITEM_VALUE"] = "value";  // untranslated
Blockly.Msg["DICTS_CREATE_WITH_TOOLTIP"] = "Create a dictionary with any number of key-value pairs.";  // untranslated
Blockly.Msg["DICTS_GET_KEYS"] = "get all keys of %1";  // untranslated
Blockly.Msg["DICTS_GET_KEYS_TOOLTIP"] = "Get all keys of a dictionary.";  // untranslated
Blockly.Msg["DICTS_GET_VALUE"] = "in dictionary %1 get value of key %2";  // untranslated
Blockly.Msg["DICTS_GET_VALUE_TOOLTIP"] = "Retern the value of the specified key in a dictionary.";  // untranslated
Blockly.Msg["DICTS_SET_VALUE"] = "in dictionary %1 set value of key %2 as %3";  // untranslated
Blockly.Msg["DICTS_SET_VALUE_TOOLTIP"] = "Set the value of the specified key in a dictionary.";  // untranslated
Blockly.Msg["DISABLE_BLOCK"] = "Disactivar bloco";
Blockly.Msg["DUPLICATE_BLOCK"] = "Duplicar";
Blockly.Msg["DUPLICATE_COMMENT"] = "Duplicar commento";
Blockly.Msg["EASY_GAME_ACTION_1"] = "moving up";  // untranslated
Blockly.Msg["EASY_GAME_ACTION_2"] = "moving down";  // untranslated
Blockly.Msg["EASY_GAME_ACTION_3"] = "moving left";  // untranslated
Blockly.Msg["EASY_GAME_ACTION_4"] = "moving right";  // untranslated
Blockly.Msg["EASY_GAME_ACTION_5"] = "doing nothing";  // untranslated
Blockly.Msg["EASY_GAME_CONSTANT_1"] = "left boundary";  // untranslated
Blockly.Msg["EASY_GAME_CONSTANT_2"] = "right boundary";  // untranslated
Blockly.Msg["EASY_GAME_CONSTANT_3"] = "top boundary";  // untranslated
Blockly.Msg["EASY_GAME_CONSTANT_4"] = "bottom boundary";  // untranslated
Blockly.Msg["EASY_GAME_CONSTANT_5"] = "ball width";  // untranslated
Blockly.Msg["EASY_GAME_CONSTANT_6"] = "ball height";  // untranslated
Blockly.Msg["EASY_GAME_CONSTANT_7"] = "food width";  // untranslated
Blockly.Msg["EASY_GAME_CONSTANT_8"] = "food height";  // untranslated
Blockly.Msg["EASY_GAME_GAME_STATUS_1"] = "alive";  // untranslated
Blockly.Msg["EASY_GAME_GAME_STATUS_2"] = "pass";  // untranslated
Blockly.Msg["EASY_GAME_GAME_STATUS_3"] = "over";  // untranslated
Blockly.Msg["EASY_GAME_SCENE_INFO_1"] = "# frame";  // untranslated
Blockly.Msg["EASY_GAME_SCENE_INFO_2"] = "game status";  // untranslated
Blockly.Msg["EASY_GAME_SCENE_INFO_3"] = "x coordinate of ball";  // untranslated
Blockly.Msg["EASY_GAME_SCENE_INFO_4"] = "y coordinate of ball";  // untranslated
Blockly.Msg["EASY_GAME_SCENE_INFO_5"] = "x coordinate of platform";  // untranslated
Blockly.Msg["EASY_GAME_SCENE_INFO_6"] = "list of foods positions";  // untranslated
Blockly.Msg["EASY_GAME_SCENE_INFO_7"] = "dictionary of all information";  // untranslated
Blockly.Msg["ENABLE_BLOCK"] = "Activar bloco";
Blockly.Msg["EXPAND_ALL"] = "Displicar blocos";
Blockly.Msg["EXPAND_BLOCK"] = "Displicar bloco";
Blockly.Msg["EXTERNAL_INPUTS"] = "Entrata externe";
Blockly.Msg["FILE_CSV_LOAD"] = "load a two-dimensional list %1 from %2.csv using delimiter %3";  // untranslated
Blockly.Msg["FILE_CSV_LOAD_TOOLTIP"] = "Load a two-dimensional list from a CSV file using a specific delimiter.";  // untranslated
Blockly.Msg["FILE_CSV_SAVE"] = "save a two-dimensional list %1 as %2.csv using delimiter %3";  // untranslated
Blockly.Msg["FILE_CSV_SAVE_TOOLTIP"] = "save a two-dimensional list as a CSV file using a specific delimiter.";  // untranslated
Blockly.Msg["FILE_DEFAULT_NAME"] = "file_name";  // untranslated
Blockly.Msg["FILE_LOAD"] = "load %1 from %2.pickle";  // untranslated
Blockly.Msg["FILE_LOAD_TOOLTIP"] = "Load an object from a file.";  // untranslated
Blockly.Msg["FILE_SAVE"] = "save %1 as %2.pickle";  // untranslated
Blockly.Msg["FILE_SAVE_TOOLTIP"] = "Save an object as a file.";  // untranslated
Blockly.Msg["HELP"] = "Adjuta";
Blockly.Msg["INLINE_INPUTS"] = "Entrata interne";
Blockly.Msg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg["LISTS_CREATE_EMPTY_TITLE"] = "crear un lista vacue";
Blockly.Msg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Retorna un lista, de longitude 0, sin datos.";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "lista";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Adde, remove o reordina sectiones pro reconfigurar iste bloco de listas.";
Blockly.Msg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg["LISTS_CREATE_WITH_INPUT_WITH"] = "crear lista con";
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Adder un elemento al lista.";
Blockly.Msg["LISTS_CREATE_WITH_TOOLTIP"] = "Crear un lista con un numero qualcunque de elementos.";
Blockly.Msg["LISTS_EXTEND_TITLE"] = "extend %1 with all elements in %2";  // untranslated
Blockly.Msg["LISTS_EXTEND_TOOLTIP"] = "Add all the elements in list 2 to the end of the list.";  // untranslated
Blockly.Msg["LISTS_EXTEND_VARIABLE"] = "list";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_FIRST"] = "prime";
Blockly.Msg["LISTS_GET_INDEX_FROM_END"] = "№ ab fin";
Blockly.Msg["LISTS_GET_INDEX_FROM_START"] = "#";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET"] = "prender";
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE"] = "prender e remover";
Blockly.Msg["LISTS_GET_INDEX_LAST"] = "ultime";
Blockly.Msg["LISTS_GET_INDEX_RANDOM"] = "aleatori";
Blockly.Msg["LISTS_GET_INDEX_REMOVE"] = "remover";
Blockly.Msg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TITLE"] = "in list %1 %2 %3";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Retorna le prime elemento in un lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Retorna le elemento presente al position specificate in un lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Retorna le ultime elemento in un lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Retorna un elemento aleatori in un lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Remove e retorna le prime elemento in un lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Remove e retorna le elemento presente al position specificate in un lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Remove e retorna le ultime elemento in un lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Remove e retorna un elemento aleatori in un lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Remove le prime elemento in un lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Remove le elemento presente al position specificate in un lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Remove le ultime elemento in un lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Remove un elemento aleatori in un lista.";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_END"] = "usque al № ab fin";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_START"] = "usque al №";
Blockly.Msg["LISTS_GET_SUBLIST_END_LAST"] = "usque al ultime";
Blockly.Msg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_IN_LIST"] = "in list";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_START_FIRST"] = "prender sublista ab initio";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_END"] = "prender sublista ab № a partir del fin";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_START"] = "prender sublista ab №";
Blockly.Msg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_TOOLTIP"] = "Crea un copia del parte specificate de un lista.";
Blockly.Msg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 es le ultime elemento.";
Blockly.Msg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 es le prime elemento.";
Blockly.Msg["LISTS_INDEX_OF_FIRST"] = "cercar le prime occurrentia del elemento";
Blockly.Msg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_LAST"] = "cercar le ultime occurrentia del elemento";
Blockly.Msg["LISTS_INDEX_OF_TITLE"] = "in list %1 %2 %3";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_TOOLTIP"] = "Retorna le indice del prime/ultime occurrentia del elemento in le lista. Retorna %1 si le elemento non es trovate.";
Blockly.Msg["LISTS_INLIST"] = "in lista";
Blockly.Msg["LISTS_INSERT_INDEX_FIRST"] = "at first";  // untranslated
Blockly.Msg["LISTS_INSERT_INDEX_FROM_END"] = "at # from end";  // untranslated
Blockly.Msg["LISTS_INSERT_INDEX_FROM_START"] = "at #";  // untranslated
Blockly.Msg["LISTS_INSERT_INDEX_LAST"] = "at last";  // untranslated
Blockly.Msg["LISTS_INSERT_INDEX_RANDOM"] = "at random";  // untranslated
Blockly.Msg["LISTS_INSERT_INDEX_TITLE"] = "in list %1 insert %2 %3";  // untranslated
Blockly.Msg["LISTS_INSERT_INDEX_TOOLTIP_FIRST"] = "Inserts the item at the start of a list.";  // untranslated
Blockly.Msg["LISTS_INSERT_INDEX_TOOLTIP_FROM"] = "Inserts the item at the specified position in a list.";  // untranslated
Blockly.Msg["LISTS_INSERT_INDEX_TOOLTIP_LAST"] = "Append the item to the end of a list.";  // untranslated
Blockly.Msg["LISTS_INSERT_INDEX_TOOLTIP_RANDOM"] = "Inserts the item randomly in a list.";  // untranslated
Blockly.Msg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg["LISTS_ISEMPTY_TITLE"] = "%1 es vacue";
Blockly.Msg["LISTS_ISEMPTY_TOOLTIP"] = "Retorna ver si le lista es vacue.";
Blockly.Msg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg["LISTS_LENGTH_TITLE"] = "longitude de %1";
Blockly.Msg["LISTS_LENGTH_TOOLTIP"] = "Retorna le longitude de un lista.";
Blockly.Msg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg["LISTS_REPEAT_TITLE"] = "crear lista con elemento %1 repetite %2 vices";
Blockly.Msg["LISTS_REPEAT_TOOLTIP"] = "Crea un lista que contine le valor fornite, repetite le numero specificate de vices.";
Blockly.Msg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
Blockly.Msg["LISTS_REVERSE_MESSAGE0"] = "inverter %1";
Blockly.Msg["LISTS_REVERSE_TOOLTIP"] = "Inverter un copia de un lista.";
Blockly.Msg["LISTS_SET_INDEX_FIRST"] = "set first";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_FROM_END"] = "set # from end";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_FROM_START"] = "set #";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_LAST"] = "set last";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_RANDOM"] = "set random";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_TITLE"] = "in list %1 %2 as %3";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_FIRST"] = "Sets the first item in a list.";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_FROM"] = "Sets the item at the specified position in a list.";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_LAST"] = "Sets the last item in a list.";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_RANDOM"] = "Sets a random item in a list.";  // untranslated
Blockly.Msg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
Blockly.Msg["LISTS_SORT_ORDER_ASCENDING"] = "ascendente";
Blockly.Msg["LISTS_SORT_ORDER_DESCENDING"] = "descendente";
Blockly.Msg["LISTS_SORT_TITLE"] = "ordinamento %1 %2 %3";
Blockly.Msg["LISTS_SORT_TOOLTIP"] = "Ordinar un copia de un lista.";
Blockly.Msg["LISTS_SORT_TYPE_IGNORECASE"] = "alphabetic, ignorar majuscula/minuscula";
Blockly.Msg["LISTS_SORT_TYPE_NUMERIC"] = "numeric";
Blockly.Msg["LISTS_SORT_TYPE_TEXT"] = "alphabetic";
Blockly.Msg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT"] = "crear lista ab texto";
Blockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST"] = "crear texto ab lista";
Blockly.Msg["LISTS_SPLIT_TITLE"] = "%2 %1 with delimiter %3";  // untranslated
Blockly.Msg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Unir un lista de textos, separate per un delimitator, in un sol texto.";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Divider texto in un lista de textos, separante lo a cata delimitator.";
Blockly.Msg["LOGIC_BOOLEAN_FALSE"] = "false";
Blockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "Retorna o ver o false.";
Blockly.Msg["LOGIC_BOOLEAN_TRUE"] = "ver";
Blockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://ia.wikipedia.org/wiki/Inequalitate_(mathematica)";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Retornar ver si le duo entratas es equal.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "Retornar ver si le prime entrata es major que le secunde.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Retornar ver si le prime entrata es major que o equal al secunde.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "Retornar ver si le prime entrata es minor que le secunde.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Retornar ver si le prime entrata es minor que o equal al secunde.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Retornar ver si le duo entratas non es equal.";
Blockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg["LOGIC_NEGATE_TITLE"] = "non %1";
Blockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "Retornar ver si le entrata es false. Retornar false si le entrata es ver.";
Blockly.Msg["LOGIC_NULL"] = "nulle";
Blockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg["LOGIC_NULL_TOOLTIP"] = "Retorna nulle.";
Blockly.Msg["LOGIC_OPERATION_AND"] = "e";
Blockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg["LOGIC_OPERATION_OR"] = "o";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "Retornar ver si ambe entratas es ver.";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "Retornar ver si al minus un del entratas es ver.";
Blockly.Msg["LOGIC_TERNARY_CONDITION"] = "test";
Blockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "si false";
Blockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "si ver";
Blockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "Verificar le condition in 'test'. Si le condition es ver, retorna le valor de 'si ver'; si non, retorna le valor de 'si false'.";
Blockly.Msg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://ia.wikipedia.org/wiki/Arithmetica";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Retornar le summa del duo numeros.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Retornar le quotiente del duo numeros.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Retornar le differentia del duo numeros.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Retornar le producto del duo numeros.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Retornar le prime numero elevate al potentia del secunde numero.";
Blockly.Msg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated
Blockly.Msg["MATH_ATAN2_TITLE"] = "atan2 de X:%1 Y:%2";
Blockly.Msg["MATH_ATAN2_TOOLTIP"] = "Retornar le arco tangente del puncto (X, Y) in grados de -180 a 180.";
Blockly.Msg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated
Blockly.Msg["MATH_CHANGE_TITLE"] = "cambiar %1 per %2";
Blockly.Msg["MATH_CHANGE_TOOLTIP"] = "Adder un numero al variabile '%1'.";
Blockly.Msg["MATH_CONSTANT_HELPURL"] = "https://ia.wikipedia.org/wiki/Constante_mathematic";
Blockly.Msg["MATH_CONSTANT_TOOLTIP"] = "Retornar un del constantes commun: π (3,141…), e (2,718…), φ (1,618…), sqrt(2) (1,414…), sqrt(½) (0,707…) o ∞ (infinite).";
Blockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
Blockly.Msg["MATH_CONSTRAIN_TITLE"] = "limitar %1 inter %2 e %3";
Blockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "Limitar un numero a esser inter le limites specificate (incluse).";
Blockly.Msg["MATH_CONVERT_TITLE"] = "conver %1 to %2";  // untranslated
Blockly.Msg["MATH_CONVERT_TOOLTIP"] = "Convert a string to integer of floating point number.";  // untranslated
Blockly.Msg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
Blockly.Msg["MATH_FLOAT"] = "floating-point number";  // untranslated
Blockly.Msg["MATH_INT"] = "integer";  // untranslated
Blockly.Msg["MATH_IS_DIVISIBLE_BY"] = "es divisibile per";
Blockly.Msg["MATH_IS_EVEN"] = "es par";
Blockly.Msg["MATH_IS_NEGATIVE"] = "es negative";
Blockly.Msg["MATH_IS_ODD"] = "es impare";
Blockly.Msg["MATH_IS_POSITIVE"] = "es positive";
Blockly.Msg["MATH_IS_PRIME"] = "es prime";
Blockly.Msg["MATH_IS_TOOLTIP"] = "Verificar si un numero es par, impare, prime, integre, positive, negative, o divisibile per un certe numero. Retorna ver o false.";
Blockly.Msg["MATH_IS_WHOLE"] = "es integre";
Blockly.Msg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";  // untranslated
Blockly.Msg["MATH_MODULO_TITLE"] = "resto de %1 ÷ %2";
Blockly.Msg["MATH_MODULO_TOOLTIP"] = "Retornar le resto del division del duo numeros.";
Blockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
Blockly.Msg["MATH_NUMBER_HELPURL"] = "https://ia.wikipedia.org/wiki/Numero";
Blockly.Msg["MATH_NUMBER_TOOLTIP"] = "Un numero.";
Blockly.Msg["MATH_ONLIST_HELPURL"] = "";  // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "media del lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "maximo del lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "mediana del lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "minimo del lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "modas del lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "elemento aleatori del lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "deviation standard del lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "summa del lista";
Blockly.Msg["MATH_ONLIST_TITLE"] = "%1 %2";  // untranslated
Blockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Retornar le media arithmetic del valores numeric in le lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "Retornar le numero le plus grande in le lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Retornar le numero median del lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "Retornar le numero le plus parve in le lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "Retornar un lista del elemento(s) le plus commun in le lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Retornar un elemento aleatori del lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Retornar le deviation standard del lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "Retornar le summa de tote le numeros in le lista.";
Blockly.Msg["MATH_POWER_SYMBOL"] = "^";  // untranslated
Blockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
Blockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "fraction aleatori";
Blockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Retornar un fraction aleatori inter 0.0 (incluse) e 1.0 (excluse).";
Blockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
Blockly.Msg["MATH_RANDOM_INT_TITLE"] = "numero integre aleatori inter %1 e %2";
Blockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "Retornar un numero integre aleatori inter le duo limites specificate, incluse.";
Blockly.Msg["MATH_ROUND_HELPURL"] = "https://ia.wikipedia.org/wiki/Rotundamento";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "arrotundar";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "arrotundar a infra";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "arrotundar a supra";
Blockly.Msg["MATH_ROUND_TOOLTIP"] = "Arrotundar un numero a supra o a infra.";
Blockly.Msg["MATH_SINGLE_HELPURL"] = "https://ia.wikipedia.org/wiki/Radice_quadrate";
Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "absolute";
Blockly.Msg["MATH_SINGLE_OP_ROOT"] = "radice quadrate";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "Retornar le valor absolute de un numero.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "Retornar <em>e</em> elevate al potentia de un numero.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "Retornar le logarithmo natural de un numero.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "Retornar le logarithmo in base 10 de un numero.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "Retornar le negation de un numero.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "Retornar 10 elevate al potentia de un numero.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "Retornar le radice quadrate de un numero.";
Blockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
Blockly.Msg["MATH_TRIG_ACOS"] = "acos";  // untranslated
Blockly.Msg["MATH_TRIG_ASIN"] = "asin";  // untranslated
Blockly.Msg["MATH_TRIG_ATAN"] = "atan";  // untranslated
Blockly.Msg["MATH_TRIG_COS"] = "cos";  // untranslated
Blockly.Msg["MATH_TRIG_HELPURL"] = "https://en.wikipedia.org/wiki/Trigonometric_functions";  // untranslated
Blockly.Msg["MATH_TRIG_SIN"] = "sin";  // untranslated
Blockly.Msg["MATH_TRIG_TAN"] = "tan";  // untranslated
Blockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "Retornar le arcocosino de un numero.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "Retornar le arcosino de un numero.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "Retornar le arcotangente de un numero.";
Blockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "Retornar le cosino de un grado (non radiano).";
Blockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "Retornar le sino de un grado (non radiano).";
Blockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "Retornar le tangente de un grado (non radiano).";
Blockly.Msg["MAZE_CAR_ACTION_1"] = "reset";  // untranslated
Blockly.Msg["MAZE_CAR_CONSTANT_1"] = "left boundary";  // untranslated
Blockly.Msg["MAZE_CAR_CONSTANT_2"] = "right boundary";  // untranslated
Blockly.Msg["MAZE_CAR_CONSTANT_3"] = "top boundary";  // untranslated
Blockly.Msg["MAZE_CAR_CONSTANT_4"] = "bottom boundary";  // untranslated
Blockly.Msg["MAZE_CAR_GAME_STATUS_1"] = "alive";  // untranslated
Blockly.Msg["MAZE_CAR_GAME_STATUS_2"] = "pass";  // untranslated
Blockly.Msg["MAZE_CAR_GAME_STATUS_3"] = "over";  // untranslated
Blockly.Msg["MAZE_CAR_INIT_INFO_1"] = "player number";  // untranslated
Blockly.Msg["MAZE_CAR_PLAYER_STATUS_1"] = "1P";  // untranslated
Blockly.Msg["MAZE_CAR_PLAYER_STATUS_2"] = "2P";  // untranslated
Blockly.Msg["MAZE_CAR_PLAYER_STATUS_3"] = "3P";  // untranslated
Blockly.Msg["MAZE_CAR_PLAYER_STATUS_4"] = "4P";  // untranslated
Blockly.Msg["MAZE_CAR_PLAYER_STATUS_5"] = "5P";  // untranslated
Blockly.Msg["MAZE_CAR_PLAYER_STATUS_6"] = "6P";  // untranslated
Blockly.Msg["MAZE_CAR_SCENE_INFO_1"] = "# frame";  // untranslated
Blockly.Msg["MAZE_CAR_SCENE_INFO_10"] = "right front sensor value";  // untranslated
Blockly.Msg["MAZE_CAR_SCENE_INFO_11"] = "left front sensor value";  // untranslated
Blockly.Msg["MAZE_CAR_SCENE_INFO_2"] = "game status";  // untranslated
Blockly.Msg["MAZE_CAR_SCENE_INFO_3"] = "x position of the car";  // untranslated
Blockly.Msg["MAZE_CAR_SCENE_INFO_4"] = "y position of the car";  // untranslated
Blockly.Msg["MAZE_CAR_SCENE_INFO_5"] = "angle of the car";  // untranslated
Blockly.Msg["MAZE_CAR_SCENE_INFO_6"] = "end position";  // untranslated
Blockly.Msg["MAZE_CAR_SCENE_INFO_7"] = "right sensor value";  // untranslated
Blockly.Msg["MAZE_CAR_SCENE_INFO_8"] = "front sensor value";  // untranslated
Blockly.Msg["MAZE_CAR_SCENE_INFO_9"] = "left sensor value";  // untranslated
Blockly.Msg["MLPLAY_ALPHA_KEYS"] = "alphabet";  // untranslated
Blockly.Msg["MLPLAY_ARROW_KEYS"] = "arrow key";  // untranslated
Blockly.Msg["MLPLAY_CLASS_INITIALIZE"] = "initialize: ";  // untranslated
Blockly.Msg["MLPLAY_CLASS_RESET"] = "reset: ";  // untranslated
Blockly.Msg["MLPLAY_CLASS_TOOLTIP"] = "The main block for playing the game.\nThe program in the \"initialize\" section will be executed once before the game starts.\nThe program in the \"update\" section will be executed once every frame in the game. You can get the current scene information in the game here, and return the next action.\nAfter the game is over, the program in the \"reset\" will be executed once before the next game starts.";  // untranslated
Blockly.Msg["MLPLAY_CLASS_UPDATE"] = "update: ";  // untranslated
Blockly.Msg["MLPLAY_CLASS_WARNING"] = "Warning: Cannot exist more than one MLPlay block.";  // untranslated
Blockly.Msg["MLPLAY_GAME_STATUS"] = "game";  // untranslated
Blockly.Msg["MLPLAY_GAME_STATUS_TOOLTIP"] = "Options to determine the game status.";  // untranslated
Blockly.Msg["MLPLAY_GET_CONSTANT"] = "constant";  // untranslated
Blockly.Msg["MLPLAY_GET_CONSTANT_TOOLTIP"] = "Get the constants of game environment.";  // untranslated
Blockly.Msg["MLPLAY_GET_INFO"] = "get";  // untranslated
Blockly.Msg["MLPLAY_GET_INFO_TOOLTIP"] = "Get scene information in the game.";  // untranslated
Blockly.Msg["MLPLAY_GET_INFO_WARNING"] = "Warning: Cannot get game information outside the \"update\" section of MLPlay block.";  // untranslated
Blockly.Msg["MLPLAY_INIT_INFO"] = "Initial information";  // untranslated
Blockly.Msg["MLPLAY_INIT_INFO_TOOLTIP"] = "Get initial information of the game";  // untranslated
Blockly.Msg["MLPLAY_INIT_INFO_WARNING"] = "Warning: Cannot get initial information outside the \"initialize\" section of MLPlay block.";  // untranslated
Blockly.Msg["MLPLAY_IS_KEY_PRESSED_TOOLTIP"] = "Return the key is pressed or not.";  // untranslated
Blockly.Msg["MLPLAY_KEY_PRESSED"] = "is pressed";  // untranslated
Blockly.Msg["MLPLAY_NUMBER_KEYS"] = "number";  // untranslated
Blockly.Msg["MLPLAY_PLAYER_STATUS"] = "Player";  // untranslated
Blockly.Msg["MLPLAY_PLAYER_STATUS_TOOLTIP"] = "Options to determine the player.";  // untranslated
Blockly.Msg["MLPLAY_RETURN_ACTION"] = "return action";  // untranslated
Blockly.Msg["MLPLAY_RETURN_ACTION_TOOLTIP"] = "Return the next action, or return the reset command after the game is over.";  // untranslated
Blockly.Msg["MLPLAY_RETURN_ACTION_WARNING"] = "Warning: Cannot return an action outside the \"update\" section of MLPlay block.";  // untranslated
Blockly.Msg["MLPLAY_RETURN_MAZECAR_ACTION"] = "return speed of left motor: %1 right motor: %2";  // untranslated
Blockly.Msg["MODEL_ACTIVATION"] = "activation function";  // untranslated
Blockly.Msg["MODEL_ACTIVATION_LOGISTIC"] = "logistic";  // untranslated
Blockly.Msg["MODEL_ACTIVATION_RELU"] = "ReLU";  // untranslated
Blockly.Msg["MODEL_ACTIVATION_TANH"] = "tanh";  // untranslated
Blockly.Msg["MODEL_ALGORITHM"] = "algorithm";  // untranslated
Blockly.Msg["MODEL_ALGORITHM_AUTO"] = "auto";  // untranslated
Blockly.Msg["MODEL_ALGORITHM_BALL_TREE"] = "ball tree";  // untranslated
Blockly.Msg["MODEL_ALGORITHM_BRUTE"] = "brute-force search";  // untranslated
Blockly.Msg["MODEL_ALGORITHM_KD_TREE"] = "k-d tree";  // untranslated
Blockly.Msg["MODEL_BATCH_SIZE"] = "batch size";  // untranslated
Blockly.Msg["MODEL_C"] = "C";  // untranslated
Blockly.Msg["MODEL_CLASSIFICATION"] = "classification model";  // untranslated
Blockly.Msg["MODEL_CREATE"] = "create";  // untranslated
Blockly.Msg["MODEL_CREATE_CLASSIFICATION_TOOLTIP"] = "Create different types of classification model and set its parameters.";  // untranslated
Blockly.Msg["MODEL_CREATE_REGRESSION_TOOLTIP"] = "Create different types of regression model and set its parameters.";  // untranslated
Blockly.Msg["MODEL_DECISION_TREE"] = "decision tree";  // untranslated
Blockly.Msg["MODEL_EVALUATE_CLASSIFICATION"] = "use true results：%1 predicted results：%2 to evaluate accuracy of classification results";  // untranslated
Blockly.Msg["MODEL_EVALUATE_CLASSIFICATION_TOOLTIP"] = "Calculate the proportion of the predicted classification results that is the same as the true results.";  // untranslated
Blockly.Msg["MODEL_EVALUATE_MAE"] = "mean absolute error";  // untranslated
Blockly.Msg["MODEL_EVALUATE_MSE"] = "mean squared error";  // untranslated
Blockly.Msg["MODEL_EVALUATE_R2"] = "coefficient of determination";  // untranslated
Blockly.Msg["MODEL_EVALUATE_REGRESSION"] = "use true results：%1 predicted results：%2 to evaluate %3 of regression results";  // untranslated
Blockly.Msg["MODEL_EVALUATE_REGRESSION_TOOLTIP"] = "Calculate the mean absolute error or mean squared error between the predicted regression results and the true results.";  // untranslated
Blockly.Msg["MODEL_EVALUATE_TOOLTIP"] = "Evaluate the predicted results according to the true results.";  // untranslated
Blockly.Msg["MODEL_HIDDEN_LAYER_SIZES"] = "hidden layer sizes";  // untranslated
Blockly.Msg["MODEL_KNN"] = "k-nearest neighbors";  // untranslated
Blockly.Msg["MODEL_K_FOLD"] = "split training data: %1 target values: %2 for %3-fold cross-validation %4";  // untranslated
Blockly.Msg["MODEL_K_FOLD_TOOLTIP"] = "Perform k-fold cross-validation on the training data randomly or sequentially. This block will return k lists of length 4, including training data, testing data, training targets, and testing targets for each cross-validation.";  // untranslated
Blockly.Msg["MODEL_LINEAR_SVM"] = "linear support vector machine";  // untranslated
Blockly.Msg["MODEL_LOSS"] = "loss funciton";  // untranslated
Blockly.Msg["MODEL_LOSS_EPSILON_INSENSITIVE"] = "linear support vector regression";  // untranslated
Blockly.Msg["MODEL_LOSS_HINGE"] = "hinge loss";  // untranslated
Blockly.Msg["MODEL_LOSS_HUBER"] = "huber loss";  // untranslated
Blockly.Msg["MODEL_LOSS_LOG"] = "logistic regression";  // untranslated
Blockly.Msg["MODEL_LOSS_MODIFIED_HUBER"] = "smoothed hinge loss";  // untranslated
Blockly.Msg["MODEL_LOSS_SQUARED_HINGE"] = "square of hinge loss";  // untranslated
Blockly.Msg["MODEL_LOSS_SQUARED_LOSS"] = "ordinary least squares";  // untranslated
Blockly.Msg["MODEL_MAX_DEPTH"] = "max depth";  // untranslated
Blockly.Msg["MODEL_MIN_SAMPLES_SPLIT"] = "minimum samples required to split";  // untranslated
Blockly.Msg["MODEL_MLP"] = "multilayer perceptron";  // untranslated
Blockly.Msg["MODEL_NO_SHUFFLE"] = "without shuffling";  // untranslated
Blockly.Msg["MODEL_N_ESTIMATORS"] = "number of trees";  // untranslated
Blockly.Msg["MODEL_PENALTY"] = "penalty function";  // untranslated
Blockly.Msg["MODEL_PENALTY_L1"] = "L1 Norm";  // untranslated
Blockly.Msg["MODEL_PENALTY_L2"] = "L2 Norm";  // untranslated
Blockly.Msg["MODEL_PREDICT"] = "use %1 to predict the target for %2";  // untranslated
Blockly.Msg["MODEL_PREDICT_TOOLTIP"] = "Use the trained model to redict the target fro the provided data. The output is a list of the length that equals to the provided data.";  // untranslated
Blockly.Msg["MODEL_RANDOM_FOREST"] = "random forest";  // untranslated
Blockly.Msg["MODEL_REGRESSION"] = "regression model";  // untranslated
Blockly.Msg["MODEL_SGD"] = "stochastic gradient descent";  // untranslated
Blockly.Msg["MODEL_SHUFFLE"] = "after shuffling";  // untranslated
Blockly.Msg["MODEL_TRAIN"] = "use training data: %1 target values: %2 to train %3";  // untranslated
Blockly.Msg["MODEL_TRAIN_TEST_SPLIT"] = "split training data: %1 target values: %2 into %5, %6, %7, %8 with the ratio of %3 %4";  // untranslated
Blockly.Msg["MODEL_TRAIN_TEST_SPLIT_TOOLTIP"] = "Split a certain proportion from the data randomly or sequentially as the test data. This block will return a list of length 4, including the split training data, testing data, training targets, and testing targets.";  // untranslated
Blockly.Msg["MODEL_TRAIN_TOOLTIP"] = "Train the model to predeict target values from training data, both training data and target values should be lists of the same length.";  // untranslated
Blockly.Msg["MODEL_WEIGHT"] = "weights";  // untranslated
Blockly.Msg["MODEL_WEIGHT_DISTANCE"] = "inverse of distance";  // untranslated
Blockly.Msg["MODEL_WEIGHT_UNIFORM"] = "uniform";  // untranslated
Blockly.Msg["NDARRAYS_CREATE_EMPTY_TITLE"] = "create empty ndarray";  // untranslated
Blockly.Msg["NDARRAYS_CREATE_FILL_WITH"] = "filled with";  // untranslated
Blockly.Msg["NDARRAYS_CREATE_WITH_CONTAINER"] = "ndarray";  // untranslated
Blockly.Msg["NDARRAYS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Add, remove, or reorder dimensions to reconfigure this ndarray block.";  // untranslated
Blockly.Msg["NDARRAYS_CREATE_WITH_DIM"] = "dimension";  // untranslated
Blockly.Msg["NDARRAYS_CREATE_WITH_DIM_TOOLTIP"] = "Add a dimension to the ndarray.";  // untranslated
Blockly.Msg["NDARRAYS_CREATE_WITH_DIM_WITH"] = "create ndarray of shape";  // untranslated
Blockly.Msg["NDARRAYS_CREATE_WITH_LIST"] = "create ndarray from %1";  // untranslated
Blockly.Msg["NDARRAYS_CREATE_WITH_LIST_TOOLTIP"] = "Create an ndarray from a list.";  // untranslated
Blockly.Msg["NDARRAYS_CREATE_WITH_TOOLTIP"] = "Create an ndarray with any shape.";  // untranslated
Blockly.Msg["NDARRAYS_TO_LIST"] = "convert %1 to list";  // untranslated
Blockly.Msg["NDARRAYS_TO_LIST_TOOLTIP"] = "Return a copy of the ndarray data as a nested list.";  // untranslated
Blockly.Msg["NEW_COLOUR_VARIABLE"] = "Crear variabile de color...";
Blockly.Msg["NEW_NUMBER_VARIABLE"] = "Crear variabile numeric...";
Blockly.Msg["NEW_STRING_VARIABLE"] = "Crear variabile textual...";
Blockly.Msg["NEW_VARIABLE"] = "Crear variabile...";
Blockly.Msg["NEW_VARIABLE_TITLE"] = "Nomine del nove variabile:";
Blockly.Msg["NEW_VARIABLE_TYPE_TITLE"] = "Nove typo de variabile:";
Blockly.Msg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
Blockly.Msg["PINGPONG_ACTION_1"] = "serving left";  // untranslated
Blockly.Msg["PINGPONG_ACTION_2"] = "serving right";  // untranslated
Blockly.Msg["PINGPONG_ACTION_3"] = "moving left";  // untranslated
Blockly.Msg["PINGPONG_ACTION_4"] = "moving right";  // untranslated
Blockly.Msg["PINGPONG_ACTION_5"] = "doing nothing";  // untranslated
Blockly.Msg["PINGPONG_ACTION_6"] = "reset";  // untranslated
Blockly.Msg["PINGPONG_CONSTANT_1"] = "left boundary";  // untranslated
Blockly.Msg["PINGPONG_CONSTANT_2"] = "right boundary";  // untranslated
Blockly.Msg["PINGPONG_CONSTANT_3"] = "top boundary";  // untranslated
Blockly.Msg["PINGPONG_CONSTANT_4"] = "bottom boundary";  // untranslated
Blockly.Msg["PINGPONG_CONSTANT_5"] = "platform width";  // untranslated
Blockly.Msg["PINGPONG_CONSTANT_6"] = "platform height";  // untranslated
Blockly.Msg["PINGPONG_CONSTANT_7"] = "blocker width";  // untranslated
Blockly.Msg["PINGPONG_CONSTANT_8"] = "blocker height";  // untranslated
Blockly.Msg["PINGPONG_GAME_STATUS_1"] = "alive";  // untranslated
Blockly.Msg["PINGPONG_GAME_STATUS_2"] = "1P wins";  // untranslated
Blockly.Msg["PINGPONG_GAME_STATUS_3"] = "2P wins";  // untranslated
Blockly.Msg["PINGPONG_GAME_STATUS_4"] = "draw";  // untranslated
Blockly.Msg["PINGPONG_INIT_INFO_1"] = "player number";  // untranslated
Blockly.Msg["PINGPONG_PLAYER_STATUS_1"] = "1P";  // untranslated
Blockly.Msg["PINGPONG_PLAYER_STATUS_2"] = "2P";  // untranslated
Blockly.Msg["PINGPONG_SCENE_INFO_1"] = "# frame";  // untranslated
Blockly.Msg["PINGPONG_SCENE_INFO_10"] = "y coordinate of 2P platform";  // untranslated
Blockly.Msg["PINGPONG_SCENE_INFO_11"] = "x coordinate of blocker position";  // untranslated
Blockly.Msg["PINGPONG_SCENE_INFO_12"] = "y coordinate of blocker position";  // untranslated
Blockly.Msg["PINGPONG_SCENE_INFO_13"] = "dictionary of all information";  // untranslated
Blockly.Msg["PINGPONG_SCENE_INFO_2"] = "game status";  // untranslated
Blockly.Msg["PINGPONG_SCENE_INFO_3"] = "x coordinate of ball";  // untranslated
Blockly.Msg["PINGPONG_SCENE_INFO_4"] = "y coordinate of ball";  // untranslated
Blockly.Msg["PINGPONG_SCENE_INFO_5"] = "ball velocity along x-axis";  // untranslated
Blockly.Msg["PINGPONG_SCENE_INFO_6"] = "ball velocity along y-axis";  // untranslated
Blockly.Msg["PINGPONG_SCENE_INFO_7"] = "x coordinate of 1P platform";  // untranslated
Blockly.Msg["PINGPONG_SCENE_INFO_8"] = "y coordinate of 1P platform";  // untranslated
Blockly.Msg["PINGPONG_SCENE_INFO_9"] = "x coordinate of 2P platform";  // untranslated
Blockly.Msg["PLOT_PLOT"] = "plot X: %1 Y: %2 marker: %3 line: %4 color: %5";  // untranslated
Blockly.Msg["PLOT_PLOT_TOOLTIP"] = "Plot with given X, Y and style.";  // untranslated
Blockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "permitter declarationes";
Blockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "con:";
Blockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
Blockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Executar le function '%1' definite per le usator.";
Blockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
Blockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Executar le function '%1' definite per le usator e usar su resultato.";
Blockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = "con:";
Blockly.Msg["PROCEDURES_CREATE_DO"] = "Crear '%1'";
Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"] = "Describe iste function...";
Blockly.Msg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "facer qualcosa";
Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "pro";
Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Crea un function que non retorna un valor.";
Blockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
Blockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "retornar";
Blockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Crea un function que retorna un valor.";
Blockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Attention: Iste function ha parametros duplicate.";
Blockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "Accentuar le definition del function";
Blockly.Msg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "Si un valor es ver, alora retornar un secunde valor.";
Blockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "Attention: Iste bloco pote solmente esser usate in le definition de un function.";
Blockly.Msg["PROCEDURES_MUTATORARG_TITLE"] = "nomine del entrata:";
Blockly.Msg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Adder un entrata al function.";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "entratas";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Adder, remover o reordinar le entratas pro iste function.";
Blockly.Msg["RACINGCAR_ACTION_1"] = "speed up";  // untranslated
Blockly.Msg["RACINGCAR_ACTION_10"] = "do nothing";  // untranslated
Blockly.Msg["RACINGCAR_ACTION_2"] = "brake";  // untranslated
Blockly.Msg["RACINGCAR_ACTION_3"] = "move left";  // untranslated
Blockly.Msg["RACINGCAR_ACTION_4"] = "move left";  // untranslated
Blockly.Msg["RACINGCAR_ACTION_5"] = "speed up and move left";  // untranslated
Blockly.Msg["RACINGCAR_ACTION_6"] = "speed up and move right";  // untranslated
Blockly.Msg["RACINGCAR_ACTION_7"] = "brake and move left";  // untranslated
Blockly.Msg["RACINGCAR_ACTION_8"] = "brake and move right";  // untranslated
Blockly.Msg["RACINGCAR_ACTION_9"] = "reset";  // untranslated
Blockly.Msg["RACINGCAR_CONSTANT_1"] = "left boundary";  // untranslated
Blockly.Msg["RACINGCAR_CONSTANT_2"] = "right boundary";  // untranslated
Blockly.Msg["RACINGCAR_CONSTANT_3"] = "top boundary";  // untranslated
Blockly.Msg["RACINGCAR_CONSTANT_4"] = "bottom boundary";  // untranslated
Blockly.Msg["RACINGCAR_CONSTANT_5"] = "car length";  // untranslated
Blockly.Msg["RACINGCAR_CONSTANT_6"] = "car width";  // untranslated
Blockly.Msg["RACINGCAR_CONSTANT_7"] = "coin length";  // untranslated
Blockly.Msg["RACINGCAR_CONSTANT_8"] = "coin width";  // untranslated
Blockly.Msg["RACINGCAR_GAME_STATUS_1"] = "alive";  // untranslated
Blockly.Msg["RACINGCAR_GAME_STATUS_2"] = "pass";  // untranslated
Blockly.Msg["RACINGCAR_GAME_STATUS_3"] = "over";  // untranslated
Blockly.Msg["RACINGCAR_SCENE_INFO_1"] = "# frame";  // untranslated
Blockly.Msg["RACINGCAR_SCENE_INFO_10"] = "number of coins obtained";  // untranslated
Blockly.Msg["RACINGCAR_SCENE_INFO_2"] = "game status";  // untranslated
Blockly.Msg["RACINGCAR_SCENE_INFO_3"] = "player id";  // untranslated
Blockly.Msg["RACINGCAR_SCENE_INFO_4"] = "x position of player";  // untranslated
Blockly.Msg["RACINGCAR_SCENE_INFO_5"] = "y position of player";  // untranslated
Blockly.Msg["RACINGCAR_SCENE_INFO_6"] = "advanced distance of player";  // untranslated
Blockly.Msg["RACINGCAR_SCENE_INFO_7"] = "velocity";  // untranslated
Blockly.Msg["RACINGCAR_SCENE_INFO_8"] = "positions of all cars";  // untranslated
Blockly.Msg["RACINGCAR_SCENE_INFO_9"] = "positions of coins";  // untranslated
Blockly.Msg["REDO"] = "Refacer";
Blockly.Msg["REMOVE_COMMENT"] = "Remover commento";
Blockly.Msg["RENAME_VARIABLE"] = "Renominar variabile...";
Blockly.Msg["RENAME_VARIABLE_TITLE"] = "Renominar tote le variabiles '%1' a:";
Blockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_APPEND_TITLE"] = "a %1 adjunger texto %2";
Blockly.Msg["TEXT_APPEND_TOOLTIP"] = "Adjunger un texto al variabile '%1'.";
Blockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "in minusculas";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "con Initiales Majuscule";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "in MAJUSCULAS";
Blockly.Msg["TEXT_CHANGECASE_TITLE"] = "%2 %1";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "Retornar un copia del texto con differente majusculas/minusculas.";
Blockly.Msg["TEXT_CHARAT_FIRST"] = "prender le prime littera";
Blockly.Msg["TEXT_CHARAT_FROM_END"] = "prender ab le fin le littera №";
Blockly.Msg["TEXT_CHARAT_FROM_START"] = "prender le littera №";
Blockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg["TEXT_CHARAT_LAST"] = "prender le ultime littera";
Blockly.Msg["TEXT_CHARAT_RANDOM"] = "prender un littera aleatori";
Blockly.Msg["TEXT_CHARAT_TAIL"] = "";  // untranslated
Blockly.Msg["TEXT_CHARAT_TITLE"] = "in le texto %1 %2";
Blockly.Msg["TEXT_CHARAT_TOOLTIP"] = "Retorna le littera presente al position specificate.";
Blockly.Msg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
Blockly.Msg["TEXT_COUNT_MESSAGE0"] = "contar %1 in %2";
Blockly.Msg["TEXT_COUNT_TOOLTIP"] = "Contar quante vices un texto occurre intra un altere texto.";
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Adder un elemento al texto.";
Blockly.Msg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "unir";
Blockly.Msg["TEXT_CREATE_JOIN_TOOLTIP"] = "Adde, remove o reordina sectiones pro reconfigurar iste bloco de texto.";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "ab le fin usque al littera №";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "usque al littera №";
Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "usque al ultime littera";
Blockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "in le texto";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "prender subcatena ab le prime littera";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "prender subcatena ab le fin ab le littera №";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "prender subcatena ab le littera №";
Blockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Retorna le parte specificate del texto.";
Blockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "cercar le prime occurrentia del texto";
Blockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "cercar le ultime occurrentia del texto";
Blockly.Msg["TEXT_INDEXOF_TITLE"] = "in le texto %1 %2 %3";
Blockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "Retorna le indice del prime/ultime occurrentia del prime texto in le secunde texto. Retorna %1 si le texto non es trovate.";
Blockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg["TEXT_ISEMPTY_TITLE"] = "%1 es vacue";
Blockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "Retorna ver si le texto fornite es vacue.";
Blockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "crear texto con";
Blockly.Msg["TEXT_JOIN_TOOLTIP"] = "Crear un pecia de texto uniente un certe numero de elementos.";
Blockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_LENGTH_TITLE"] = "longitude de %1";
Blockly.Msg["TEXT_LENGTH_TOOLTIP"] = "Retorna le numero de litteras (incluse spatios) in le texto fornite.";
Blockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg["TEXT_PRINT_TITLE"] = "scriber %1";
Blockly.Msg["TEXT_PRINT_TOOLTIP"] = "Scriber le texto, numero o altere valor specificate.";
Blockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Peter un numero al usator.";
Blockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Peter un texto al usator.";
Blockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "peter un numero con le message";
Blockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "peter un texto con le message";
Blockly.Msg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
Blockly.Msg["TEXT_REPLACE_MESSAGE0"] = "reimplaciar %1 per %2 in %3";
Blockly.Msg["TEXT_REPLACE_TOOLTIP"] = "Reimplaciar tote le occurrentias de un texto intra un altere texto.";
Blockly.Msg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
Blockly.Msg["TEXT_REVERSE_MESSAGE0"] = "inverter %1";
Blockly.Msg["TEXT_REVERSE_TOOLTIP"] = "Inverte le ordine del characteres in le texto.";
Blockly.Msg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";  // untranslated
Blockly.Msg["TEXT_TEXT_TOOLTIP"] = "Un littera, parola o linea de texto.";
Blockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "remover spatios de ambe lateres de";
Blockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "remover spatios del sinistre latere de";
Blockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "remover spatios del dextre latere de";
Blockly.Msg["TEXT_TRIM_TITLE"] = "%2 %1";  // untranslated
Blockly.Msg["TEXT_TRIM_TOOLTIP"] = "Retornar un copia del texto con spatios eliminate de un extremitate o ambes.";
Blockly.Msg["TODAY"] = "Hodie";
Blockly.Msg["UNDO"] = "Disfacer";
Blockly.Msg["UNNAMED_KEY"] = "sin nomine";
Blockly.Msg["VARIABLES_DEFAULT_NAME"] = "cosa";
Blockly.Msg["VARIABLES_GET_CREATE_SET"] = "Crea 'mitter %1'";
Blockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg["VARIABLES_GET_TOOLTIP"] = "Retorna le valor de iste variabile.";
Blockly.Msg["VARIABLES_SET"] = "mitter %1 a %2";
Blockly.Msg["VARIABLES_SET_CREATE_GET"] = "Crear 'prender %1'";
Blockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg["VARIABLES_SET_TOOLTIP"] = "Mitte iste variabile al valor del entrata.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS"] = "Un variabile con le nomine '%1' jam existe.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "Un variabile con le nomine '%1' jam existe pro un altere typo: '%2'.";
Blockly.Msg["WORKSPACE_ARIA_LABEL"] = "Spatio de travalio de Blockly";
Blockly.Msg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Dice qualcosa...";
Blockly.Msg["CONTROLS_FOREACH_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_FOR_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"];
Blockly.Msg["CONTROLS_IF_ELSE_TITLE_ELSE"] = Blockly.Msg["CONTROLS_IF_MSG_ELSE"];
Blockly.Msg["CONTROLS_IF_IF_TITLE_IF"] = Blockly.Msg["CONTROLS_IF_MSG_IF"];
Blockly.Msg["CONTROLS_IF_MSG_THEN"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_WHILEUNTIL_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TITLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["LISTS_GET_INDEX_HELPURL"] = Blockly.Msg["LISTS_INDEX_OF_HELPURL"];
Blockly.Msg["LISTS_GET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_INDEX_OF_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_SET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["MATH_CHANGE_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["PROCEDURES_DEFRETURN_COMMENT"] = Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"];
Blockly.Msg["PROCEDURES_DEFRETURN_DO"] = Blockly.Msg["PROCEDURES_DEFNORETURN_DO"];
Blockly.Msg["PROCEDURES_DEFRETURN_PROCEDURE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"];
Blockly.Msg["PROCEDURES_DEFRETURN_TITLE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"];
Blockly.Msg["TEXT_APPEND_VARIABLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];

Blockly.Msg["LOGIC_HUE"] = "100";
Blockly.Msg["LOOPS_HUE"] = "140";
Blockly.Msg["MATH_HUE"] = "170";
Blockly.Msg["TEXTS_HUE"] = "190";
Blockly.Msg["LISTS_HUE"] = "210";
Blockly.Msg["DICTS_HUE"] = "230";
Blockly.Msg["NDARRAY_HUE"] = "250";
Blockly.Msg["MODEL_HUE"] = "270";
Blockly.Msg["COLOUR_HUE"] = "20";
Blockly.Msg["VARIABLES_HUE"] = "290";
Blockly.Msg["VARIABLES_DYNAMIC_HUE"] = "300";
Blockly.Msg["PROCEDURES_HUE"] = "310";
Blockly.Msg["PLOT_HUE"] = "335";
Blockly.Msg["FILE_HUE"] = "360";
Blockly.Msg["MLGAME_HUE"] = "20";